/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { BankReceiptListRelationFilter } from "../../bankReceipt/base/BankReceiptListRelationFilter";
import { ValidateNested, IsOptional, IsEnum } from "class-validator";
import { Type } from "class-transformer";
import { CashCountDetailListRelationFilter } from "../../cashCountDetail/base/CashCountDetailListRelationFilter";
import { StringNullableFilter } from "../../util/StringNullableFilter";
import { IntFilter } from "../../util/IntFilter";
import { EnumCashCountEstatusValidacion } from "./EnumCashCountEstatusValidacion";
import { DateTimeFilter } from "../../util/DateTimeFilter";
import { DateTimeNullableFilter } from "../../util/DateTimeNullableFilter";
import { IntNullableFilter } from "../../util/IntNullableFilter";
import { WarehouseWhereUniqueInput } from "../../warehouse/base/WarehouseWhereUniqueInput";

@InputType()
class CashCountWhereInput {
  @ApiProperty({
    required: false,
    type: () => BankReceiptListRelationFilter,
  })
  @ValidateNested()
  @Type(() => BankReceiptListRelationFilter)
  @IsOptional()
  @Field(() => BankReceiptListRelationFilter, {
    nullable: true,
  })
  bankReceipts?: BankReceiptListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => CashCountDetailListRelationFilter,
  })
  @ValidateNested()
  @Type(() => CashCountDetailListRelationFilter)
  @IsOptional()
  @Field(() => CashCountDetailListRelationFilter, {
    nullable: true,
  })
  cashCountDetails?: CashCountDetailListRelationFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  comentarios?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: IntFilter,
  })
  @Type(() => IntFilter)
  @IsOptional()
  @Field(() => IntFilter, {
    nullable: true,
  })
  createdUserId?: IntFilter;

  @ApiProperty({
    required: false,
    enum: EnumCashCountEstatusValidacion,
  })
  @IsEnum(EnumCashCountEstatusValidacion)
  @IsOptional()
  @Field(() => EnumCashCountEstatusValidacion, {
    nullable: true,
  })
  estatus_validacion?: "SV" | "NE" | "I" | "C";

  @ApiProperty({
    required: false,
    type: DateTimeFilter,
  })
  @Type(() => DateTimeFilter)
  @IsOptional()
  @Field(() => DateTimeFilter, {
    nullable: true,
  })
  fechaRegistro?: DateTimeFilter;

  @ApiProperty({
    required: false,
    type: DateTimeNullableFilter,
  })
  @Type(() => DateTimeNullableFilter)
  @IsOptional()
  @Field(() => DateTimeNullableFilter, {
    nullable: true,
  })
  fechaValidacion?: DateTimeNullableFilter;

  @ApiProperty({
    required: false,
    type: DateTimeFilter,
  })
  @Type(() => DateTimeFilter)
  @IsOptional()
  @Field(() => DateTimeFilter, {
    nullable: true,
  })
  fromDate?: DateTimeFilter;

  @ApiProperty({
    required: false,
    type: IntFilter,
  })
  @Type(() => IntFilter)
  @IsOptional()
  @Field(() => IntFilter, {
    nullable: true,
  })
  id?: IntFilter;

  @ApiProperty({
    required: false,
    type: DateTimeFilter,
  })
  @Type(() => DateTimeFilter)
  @IsOptional()
  @Field(() => DateTimeFilter, {
    nullable: true,
  })
  toDate?: DateTimeFilter;

  @ApiProperty({
    required: false,
    type: IntNullableFilter,
  })
  @Type(() => IntNullableFilter)
  @IsOptional()
  @Field(() => IntNullableFilter, {
    nullable: true,
  })
  validUserId?: IntNullableFilter;

  @ApiProperty({
    required: false,
    type: () => WarehouseWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => WarehouseWhereUniqueInput)
  @IsOptional()
  @Field(() => WarehouseWhereUniqueInput, {
    nullable: true,
  })
  warehouses?: WarehouseWhereUniqueInput;
}

export { CashCountWhereInput as CashCountWhereInput };
