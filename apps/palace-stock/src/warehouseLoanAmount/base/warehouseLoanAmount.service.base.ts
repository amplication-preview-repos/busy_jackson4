/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";

import {
  Prisma,
  WarehouseLoanAmount as PrismaWarehouseLoanAmount,
  LoanAmount as PrismaLoanAmount,
  Warehouse as PrismaWarehouse,
} from "@prisma/client";

export class WarehouseLoanAmountServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.WarehouseLoanAmountCountArgs, "select">
  ): Promise<number> {
    return this.prisma.warehouseLoanAmount.count(args);
  }

  async warehouseLoanAmounts<T extends Prisma.WarehouseLoanAmountFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.WarehouseLoanAmountFindManyArgs>
  ): Promise<PrismaWarehouseLoanAmount[]> {
    return this.prisma.warehouseLoanAmount.findMany<Prisma.WarehouseLoanAmountFindManyArgs>(
      args
    );
  }
  async warehouseLoanAmount<T extends Prisma.WarehouseLoanAmountFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.WarehouseLoanAmountFindUniqueArgs>
  ): Promise<PrismaWarehouseLoanAmount | null> {
    return this.prisma.warehouseLoanAmount.findUnique(args);
  }
  async createWarehouseLoanAmount<
    T extends Prisma.WarehouseLoanAmountCreateArgs
  >(
    args: Prisma.SelectSubset<T, Prisma.WarehouseLoanAmountCreateArgs>
  ): Promise<PrismaWarehouseLoanAmount> {
    return this.prisma.warehouseLoanAmount.create<T>(args);
  }
  async updateWarehouseLoanAmount<
    T extends Prisma.WarehouseLoanAmountUpdateArgs
  >(
    args: Prisma.SelectSubset<T, Prisma.WarehouseLoanAmountUpdateArgs>
  ): Promise<PrismaWarehouseLoanAmount> {
    return this.prisma.warehouseLoanAmount.update<T>(args);
  }
  async deleteWarehouseLoanAmount<
    T extends Prisma.WarehouseLoanAmountDeleteArgs
  >(
    args: Prisma.SelectSubset<T, Prisma.WarehouseLoanAmountDeleteArgs>
  ): Promise<PrismaWarehouseLoanAmount> {
    return this.prisma.warehouseLoanAmount.delete(args);
  }

  async getLoanAmounts(parentId: number): Promise<PrismaLoanAmount | null> {
    return this.prisma.warehouseLoanAmount
      .findUnique({
        where: { id: parentId },
      })
      .loanAmounts();
  }

  async getWarehouses(parentId: number): Promise<PrismaWarehouse | null> {
    return this.prisma.warehouseLoanAmount
      .findUnique({
        where: { id: parentId },
      })
      .warehouses();
  }
}
