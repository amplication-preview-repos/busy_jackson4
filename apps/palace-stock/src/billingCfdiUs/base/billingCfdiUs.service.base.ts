/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, BillingCfdiUs as PrismaBillingCfdiUs } from "@prisma/client";

export class BillingCfdiUsServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.BillingCfdiUsCountArgs, "select">
  ): Promise<number> {
    return this.prisma.billingCfdiUs.count(args);
  }

  async billingCfdiuses<T extends Prisma.BillingCfdiUsFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.BillingCfdiUsFindManyArgs>
  ): Promise<PrismaBillingCfdiUs[]> {
    return this.prisma.billingCfdiUs.findMany<Prisma.BillingCfdiUsFindManyArgs>(
      args
    );
  }
  async billingCfdiUs<T extends Prisma.BillingCfdiUsFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.BillingCfdiUsFindUniqueArgs>
  ): Promise<PrismaBillingCfdiUs | null> {
    return this.prisma.billingCfdiUs.findUnique(args);
  }
  async createBillingCfdiUs<T extends Prisma.BillingCfdiUsCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.BillingCfdiUsCreateArgs>
  ): Promise<PrismaBillingCfdiUs> {
    return this.prisma.billingCfdiUs.create<T>(args);
  }
  async updateBillingCfdiUs<T extends Prisma.BillingCfdiUsUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.BillingCfdiUsUpdateArgs>
  ): Promise<PrismaBillingCfdiUs> {
    return this.prisma.billingCfdiUs.update<T>(args);
  }
  async deleteBillingCfdiUs<T extends Prisma.BillingCfdiUsDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.BillingCfdiUsDeleteArgs>
  ): Promise<PrismaBillingCfdiUs> {
    return this.prisma.billingCfdiUs.delete(args);
  }
}
