/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { AccessLevelWhereUniqueInput } from "../../accessLevel/base/AccessLevelWhereUniqueInput";
import {
  ValidateNested,
  IsOptional,
  IsEnum,
  IsInt,
  IsString,
} from "class-validator";
import { Type } from "class-transformer";
import { BranchManagerCreateNestedManyWithoutUserModelsInput } from "./BranchManagerCreateNestedManyWithoutUserModelsInput";
import { BranchOfficeCreateNestedManyWithoutUserModelsInput } from "./BranchOfficeCreateNestedManyWithoutUserModelsInput";
import { CollaboratorCreateNestedManyWithoutUserModelsInput } from "./CollaboratorCreateNestedManyWithoutUserModelsInput";
import { CollaboratorWhereUniqueInput } from "../../collaborator/base/CollaboratorWhereUniqueInput";
import { ConektaPaymentTransacCreateNestedManyWithoutUserModelsInput } from "./ConektaPaymentTransacCreateNestedManyWithoutUserModelsInput";
import { CustomerCreateNestedManyWithoutUserModelsInput } from "./CustomerCreateNestedManyWithoutUserModelsInput";
import { EnumUserModelEstatusUsuario } from "./EnumUserModelEstatusUsuario";
import { LoanedDeviceCreateNestedManyWithoutUserModelsInput } from "./LoanedDeviceCreateNestedManyWithoutUserModelsInput";
import { ModifiedPermissionCreateNestedManyWithoutUserModelsInput } from "./ModifiedPermissionCreateNestedManyWithoutUserModelsInput";
import { NubariumValidationCreateNestedManyWithoutUserModelsInput } from "./NubariumValidationCreateNestedManyWithoutUserModelsInput";
import { PersonalLoanCreateNestedManyWithoutUserModelsInput } from "./PersonalLoanCreateNestedManyWithoutUserModelsInput";
import { ProtectionCertCreateNestedManyWithoutUserModelsInput } from "./ProtectionCertCreateNestedManyWithoutUserModelsInput";
import { PurchaseCreateNestedManyWithoutUserModelsInput } from "./PurchaseCreateNestedManyWithoutUserModelsInput";
import { UserPermissionCreateNestedManyWithoutUserModelsInput } from "./UserPermissionCreateNestedManyWithoutUserModelsInput";
import { UserQualityHistoryCreateNestedManyWithoutUserModelsInput } from "./UserQualityHistoryCreateNestedManyWithoutUserModelsInput";
import { VendorCreateNestedManyWithoutUserModelsInput } from "./VendorCreateNestedManyWithoutUserModelsInput";
import { WarehouseGrantCreateNestedManyWithoutUserModelsInput } from "./WarehouseGrantCreateNestedManyWithoutUserModelsInput";

@InputType()
class UserModelCreateInput {
  @ApiProperty({
    required: false,
    type: () => AccessLevelWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => AccessLevelWhereUniqueInput)
  @IsOptional()
  @Field(() => AccessLevelWhereUniqueInput, {
    nullable: true,
  })
  accessLevels?: AccessLevelWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => BranchManagerCreateNestedManyWithoutUserModelsInput,
  })
  @ValidateNested()
  @Type(() => BranchManagerCreateNestedManyWithoutUserModelsInput)
  @IsOptional()
  @Field(() => BranchManagerCreateNestedManyWithoutUserModelsInput, {
    nullable: true,
  })
  branchManagers?: BranchManagerCreateNestedManyWithoutUserModelsInput;

  @ApiProperty({
    required: false,
    type: () => BranchOfficeCreateNestedManyWithoutUserModelsInput,
  })
  @ValidateNested()
  @Type(() => BranchOfficeCreateNestedManyWithoutUserModelsInput)
  @IsOptional()
  @Field(() => BranchOfficeCreateNestedManyWithoutUserModelsInput, {
    nullable: true,
  })
  branchOffices?: BranchOfficeCreateNestedManyWithoutUserModelsInput;

  @ApiProperty({
    required: false,
    type: () => CollaboratorCreateNestedManyWithoutUserModelsInput,
  })
  @ValidateNested()
  @Type(() => CollaboratorCreateNestedManyWithoutUserModelsInput)
  @IsOptional()
  @Field(() => CollaboratorCreateNestedManyWithoutUserModelsInput, {
    nullable: true,
  })
  collaboratorsCollaboratorsCreatedUserIdTousers?: CollaboratorCreateNestedManyWithoutUserModelsInput;

  @ApiProperty({
    required: false,
    type: () => CollaboratorWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => CollaboratorWhereUniqueInput)
  @IsOptional()
  @Field(() => CollaboratorWhereUniqueInput, {
    nullable: true,
  })
  collaboratorsUsersCollaboratorIdTocollaborators?: CollaboratorWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => ConektaPaymentTransacCreateNestedManyWithoutUserModelsInput,
  })
  @ValidateNested()
  @Type(() => ConektaPaymentTransacCreateNestedManyWithoutUserModelsInput)
  @IsOptional()
  @Field(() => ConektaPaymentTransacCreateNestedManyWithoutUserModelsInput, {
    nullable: true,
  })
  conektaPaymentTransacs?: ConektaPaymentTransacCreateNestedManyWithoutUserModelsInput;

  @ApiProperty({
    required: false,
    type: () => CustomerCreateNestedManyWithoutUserModelsInput,
  })
  @ValidateNested()
  @Type(() => CustomerCreateNestedManyWithoutUserModelsInput)
  @IsOptional()
  @Field(() => CustomerCreateNestedManyWithoutUserModelsInput, {
    nullable: true,
  })
  customersCustomersCreatedUserIdTousers?: CustomerCreateNestedManyWithoutUserModelsInput;

  @ApiProperty({
    required: false,
    type: () => CustomerCreateNestedManyWithoutUserModelsInput,
  })
  @ValidateNested()
  @Type(() => CustomerCreateNestedManyWithoutUserModelsInput)
  @IsOptional()
  @Field(() => CustomerCreateNestedManyWithoutUserModelsInput, {
    nullable: true,
  })
  customersCustomersUpdatedUserIdTousers?: CustomerCreateNestedManyWithoutUserModelsInput;

  @ApiProperty({
    required: true,
    enum: EnumUserModelEstatusUsuario,
  })
  @IsEnum(EnumUserModelEstatusUsuario)
  @Field(() => EnumUserModelEstatusUsuario)
  estatus_usuario!: "A" | "I";

  @ApiProperty({
    required: true,
    type: Number,
  })
  @IsInt()
  @Field(() => Number)
  idColabRegistroUsuario!: number;

  @ApiProperty({
    required: false,
    type: () => LoanedDeviceCreateNestedManyWithoutUserModelsInput,
  })
  @ValidateNested()
  @Type(() => LoanedDeviceCreateNestedManyWithoutUserModelsInput)
  @IsOptional()
  @Field(() => LoanedDeviceCreateNestedManyWithoutUserModelsInput, {
    nullable: true,
  })
  loanedDevicesLoanedDevicesCreatedUserIdTousers?: LoanedDeviceCreateNestedManyWithoutUserModelsInput;

  @ApiProperty({
    required: false,
    type: () => LoanedDeviceCreateNestedManyWithoutUserModelsInput,
  })
  @ValidateNested()
  @Type(() => LoanedDeviceCreateNestedManyWithoutUserModelsInput)
  @IsOptional()
  @Field(() => LoanedDeviceCreateNestedManyWithoutUserModelsInput, {
    nullable: true,
  })
  loanedDevicesLoanedDevicesReturnedUserIdTousers?: LoanedDeviceCreateNestedManyWithoutUserModelsInput;

  @ApiProperty({
    required: false,
    type: () => ModifiedPermissionCreateNestedManyWithoutUserModelsInput,
  })
  @ValidateNested()
  @Type(() => ModifiedPermissionCreateNestedManyWithoutUserModelsInput)
  @IsOptional()
  @Field(() => ModifiedPermissionCreateNestedManyWithoutUserModelsInput, {
    nullable: true,
  })
  modifiedPermissions?: ModifiedPermissionCreateNestedManyWithoutUserModelsInput;

  @ApiProperty({
    required: false,
    type: () => NubariumValidationCreateNestedManyWithoutUserModelsInput,
  })
  @ValidateNested()
  @Type(() => NubariumValidationCreateNestedManyWithoutUserModelsInput)
  @IsOptional()
  @Field(() => NubariumValidationCreateNestedManyWithoutUserModelsInput, {
    nullable: true,
  })
  nubariumValidations?: NubariumValidationCreateNestedManyWithoutUserModelsInput;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  passCifrado!: string;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  permisosExcluidos?: string | null;

  @ApiProperty({
    required: false,
    type: () => PersonalLoanCreateNestedManyWithoutUserModelsInput,
  })
  @ValidateNested()
  @Type(() => PersonalLoanCreateNestedManyWithoutUserModelsInput)
  @IsOptional()
  @Field(() => PersonalLoanCreateNestedManyWithoutUserModelsInput, {
    nullable: true,
  })
  personalLoans?: PersonalLoanCreateNestedManyWithoutUserModelsInput;

  @ApiProperty({
    required: false,
    type: () => ProtectionCertCreateNestedManyWithoutUserModelsInput,
  })
  @ValidateNested()
  @Type(() => ProtectionCertCreateNestedManyWithoutUserModelsInput)
  @IsOptional()
  @Field(() => ProtectionCertCreateNestedManyWithoutUserModelsInput, {
    nullable: true,
  })
  protectionCerts?: ProtectionCertCreateNestedManyWithoutUserModelsInput;

  @ApiProperty({
    required: false,
    type: () => PurchaseCreateNestedManyWithoutUserModelsInput,
  })
  @ValidateNested()
  @Type(() => PurchaseCreateNestedManyWithoutUserModelsInput)
  @IsOptional()
  @Field(() => PurchaseCreateNestedManyWithoutUserModelsInput, {
    nullable: true,
  })
  purchasesPurchasesCreatedUserIdTousers?: PurchaseCreateNestedManyWithoutUserModelsInput;

  @ApiProperty({
    required: false,
    type: () => PurchaseCreateNestedManyWithoutUserModelsInput,
  })
  @ValidateNested()
  @Type(() => PurchaseCreateNestedManyWithoutUserModelsInput)
  @IsOptional()
  @Field(() => PurchaseCreateNestedManyWithoutUserModelsInput, {
    nullable: true,
  })
  purchasesPurchasesUpdatedUserIdTousers?: PurchaseCreateNestedManyWithoutUserModelsInput;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  userName!: string;

  @ApiProperty({
    required: false,
    type: () => UserPermissionCreateNestedManyWithoutUserModelsInput,
  })
  @ValidateNested()
  @Type(() => UserPermissionCreateNestedManyWithoutUserModelsInput)
  @IsOptional()
  @Field(() => UserPermissionCreateNestedManyWithoutUserModelsInput, {
    nullable: true,
  })
  userPermissions?: UserPermissionCreateNestedManyWithoutUserModelsInput;

  @ApiProperty({
    required: false,
    type: () => UserQualityHistoryCreateNestedManyWithoutUserModelsInput,
  })
  @ValidateNested()
  @Type(() => UserQualityHistoryCreateNestedManyWithoutUserModelsInput)
  @IsOptional()
  @Field(() => UserQualityHistoryCreateNestedManyWithoutUserModelsInput, {
    nullable: true,
  })
  userQualityHistories?: UserQualityHistoryCreateNestedManyWithoutUserModelsInput;

  @ApiProperty({
    required: false,
    type: () => VendorCreateNestedManyWithoutUserModelsInput,
  })
  @ValidateNested()
  @Type(() => VendorCreateNestedManyWithoutUserModelsInput)
  @IsOptional()
  @Field(() => VendorCreateNestedManyWithoutUserModelsInput, {
    nullable: true,
  })
  vendorsVendorsCreatedUserIdTousers?: VendorCreateNestedManyWithoutUserModelsInput;

  @ApiProperty({
    required: false,
    type: () => VendorCreateNestedManyWithoutUserModelsInput,
  })
  @ValidateNested()
  @Type(() => VendorCreateNestedManyWithoutUserModelsInput)
  @IsOptional()
  @Field(() => VendorCreateNestedManyWithoutUserModelsInput, {
    nullable: true,
  })
  vendorsVendorsUpdatedUserIdTousers?: VendorCreateNestedManyWithoutUserModelsInput;

  @ApiProperty({
    required: false,
    type: () => WarehouseGrantCreateNestedManyWithoutUserModelsInput,
  })
  @ValidateNested()
  @Type(() => WarehouseGrantCreateNestedManyWithoutUserModelsInput)
  @IsOptional()
  @Field(() => WarehouseGrantCreateNestedManyWithoutUserModelsInput, {
    nullable: true,
  })
  warehouseGrants?: WarehouseGrantCreateNestedManyWithoutUserModelsInput;
}

export { UserModelCreateInput as UserModelCreateInput };
