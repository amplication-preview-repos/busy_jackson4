/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { IntNullableFilter } from "../../util/IntNullableFilter";
import { Type } from "class-transformer";
import { IsOptional, IsEnum, ValidateNested } from "class-validator";
import { StringFilter } from "../../util/StringFilter";
import { IntFilter } from "../../util/IntFilter";
import { DateTimeFilter } from "../../util/DateTimeFilter";
import { EnumItemPriceGamma } from "./EnumItemPriceGamma";
import { ItemWhereUniqueInput } from "../../item/base/ItemWhereUniqueInput";
import { DecimalFilter } from "../../util/DecimalFilter";
import { EnumItemPriceTipoVenta } from "./EnumItemPriceTipoVenta";

@InputType()
class ItemPriceWhereInput {
  @ApiProperty({
    required: false,
    type: IntNullableFilter,
  })
  @Type(() => IntNullableFilter)
  @IsOptional()
  @Field(() => IntNullableFilter, {
    nullable: true,
  })
  comisionInmediata?: IntNullableFilter;

  @ApiProperty({
    required: false,
    type: IntNullableFilter,
  })
  @Type(() => IntNullableFilter)
  @IsOptional()
  @Field(() => IntNullableFilter, {
    nullable: true,
  })
  createdUserId?: IntNullableFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  descripcionArt?: StringFilter;

  @ApiProperty({
    required: false,
    type: IntFilter,
  })
  @Type(() => IntFilter)
  @IsOptional()
  @Field(() => IntFilter, {
    nullable: true,
  })
  enganche?: IntFilter;

  @ApiProperty({
    required: false,
    type: DateTimeFilter,
  })
  @Type(() => DateTimeFilter)
  @IsOptional()
  @Field(() => DateTimeFilter, {
    nullable: true,
  })
  fechaLanzamiento?: DateTimeFilter;

  @ApiProperty({
    required: false,
    enum: EnumItemPriceGamma,
  })
  @IsEnum(EnumItemPriceGamma)
  @IsOptional()
  @Field(() => EnumItemPriceGamma, {
    nullable: true,
  })
  gamma?:
    | "BAJA"
    | "MEDIA"
    | "ALTA"
    | "ULTRA_BAJA"
    | "SIN_INFORMACION"
    | "MODEM";

  @ApiProperty({
    required: false,
    type: IntFilter,
  })
  @Type(() => IntFilter)
  @IsOptional()
  @Field(() => IntFilter, {
    nullable: true,
  })
  id?: IntFilter;

  @ApiProperty({
    required: false,
    type: () => ItemWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => ItemWhereUniqueInput)
  @IsOptional()
  @Field(() => ItemWhereUniqueInput, {
    nullable: true,
  })
  items?: ItemWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  modelo?: StringFilter;

  @ApiProperty({
    required: false,
    type: DecimalFilter,
  })
  @Type(() => DecimalFilter)
  @IsOptional()
  @Field(() => DecimalFilter, {
    nullable: true,
  })
  precioVenta?: DecimalFilter;

  @ApiProperty({
    required: false,
    enum: EnumItemPriceTipoVenta,
  })
  @IsEnum(EnumItemPriceTipoVenta)
  @IsOptional()
  @Field(() => EnumItemPriceTipoVenta, {
    nullable: true,
  })
  tipo_venta?: "FINANCIAMIENTO" | "CONTADO";
}

export { ItemPriceWhereInput as ItemPriceWhereInput };
