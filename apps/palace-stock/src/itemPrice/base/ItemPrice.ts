/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { ObjectType, Field, Float } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsInt,
  IsOptional,
  IsString,
  IsDate,
  IsEnum,
  ValidateNested,
  IsNumber,
} from "class-validator";
import { Type } from "class-transformer";
import { EnumItemPriceGamma } from "./EnumItemPriceGamma";
import { Item } from "../../item/base/Item";
import { Decimal } from "decimal.js";
import { EnumItemPriceTipoVenta } from "./EnumItemPriceTipoVenta";

@ObjectType()
class ItemPrice {
  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  comisionInmediata!: number | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  createdUserId!: number | null;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  descripcionArt!: string;

  @ApiProperty({
    required: true,
    type: Number,
  })
  @IsInt()
  @Field(() => Number)
  enganche!: number;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  fechaLanzamiento!: Date;

  @ApiProperty({
    required: true,
    enum: EnumItemPriceGamma,
  })
  @IsEnum(EnumItemPriceGamma)
  @Field(() => EnumItemPriceGamma, {
    nullable: true,
  })
  gamma?:
    | "BAJA"
    | "MEDIA"
    | "ALTA"
    | "ULTRA_BAJA"
    | "SIN_INFORMACION"
    | "MODEM";

  @ApiProperty({
    required: true,
    type: Number,
  })
  @IsInt()
  @Field(() => Number)
  id!: number;

  @ApiProperty({
    required: true,
    type: () => Item,
  })
  @ValidateNested()
  @Type(() => Item)
  items?: Item;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  modelo!: string;

  @ApiProperty({
    required: true,
    type: Number,
  })
  @IsNumber()
  @Field(() => Float)
  precioVenta!: Decimal;

  @ApiProperty({
    required: true,
    enum: EnumItemPriceTipoVenta,
  })
  @IsEnum(EnumItemPriceTipoVenta)
  @Field(() => EnumItemPriceTipoVenta, {
    nullable: true,
  })
  tipo_venta?: "FINANCIAMIENTO" | "CONTADO";
}

export { ItemPrice as ItemPrice };
