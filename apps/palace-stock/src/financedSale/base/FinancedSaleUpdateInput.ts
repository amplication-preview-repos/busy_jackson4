/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field, Float } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsInt,
  IsOptional,
  IsString,
  IsDate,
  ValidateNested,
  IsEnum,
  IsNumber,
} from "class-validator";
import { Type } from "class-transformer";
import { AngazaAccountUpdateManyWithoutFinancedSalesInput } from "./AngazaAccountUpdateManyWithoutFinancedSalesInput";
import { AngazaPaymentUpdateManyWithoutFinancedSalesInput } from "./AngazaPaymentUpdateManyWithoutFinancedSalesInput";
import { BillUpdateManyWithoutFinancedSalesInput } from "./BillUpdateManyWithoutFinancedSalesInput";
import { EnumFinancedSaleBloqueoConfirmado } from "./EnumFinancedSaleBloqueoConfirmado";
import { EnumFinancedSaleBloqueoPermanente } from "./EnumFinancedSaleBloqueoPermanente";
import { CashCountDetailWhereUniqueInput } from "../../cashCountDetail/base/CashCountDetailWhereUniqueInput";
import { ConektaPaymentTransacUpdateManyWithoutFinancedSalesInput } from "./ConektaPaymentTransacUpdateManyWithoutFinancedSalesInput";
import { CustomerWhereUniqueInput } from "../../customer/base/CustomerWhereUniqueInput";
import { DocumentUpdateManyWithoutFinancedSalesInput } from "./DocumentUpdateManyWithoutFinancedSalesInput";
import { Decimal } from "decimal.js";
import { EnumFinancedSaleEstatusBloqueo } from "./EnumFinancedSaleEstatusBloqueo";
import { EnumFinancedSaleEstatusEquipo } from "./EnumFinancedSaleEstatusEquipo";
import { EnumFinancedSaleEstatusFinanc } from "./EnumFinancedSaleEstatusFinanc";
import { FinancedAccessoryUpdateManyWithoutFinancedSalesInput } from "./FinancedAccessoryUpdateManyWithoutFinancedSalesInput";
import { FinancedSalesLogUpdateManyWithoutFinancedSalesInput } from "./FinancedSalesLogUpdateManyWithoutFinancedSalesInput";
import { EnumFinancedSaleHabilitarPagoRecurrente } from "./EnumFinancedSaleHabilitarPagoRecurrente";
import { GraphQLBigInt } from "../../util/GraphQLBigInt";
import { EnumFinancedSaleIneVerificado } from "./EnumFinancedSaleIneVerificado";
import { ItemWhereUniqueInput } from "../../item/base/ItemWhereUniqueInput";
import { KardexUpdateManyWithoutFinancedSalesInput } from "./KardexUpdateManyWithoutFinancedSalesInput";
import { LoanedDeviceUpdateManyWithoutFinancedSalesInput } from "./LoanedDeviceUpdateManyWithoutFinancedSalesInput";
import { LockedDevBadCustomerUpdateManyWithoutFinancedSalesInput } from "./LockedDevBadCustomerUpdateManyWithoutFinancedSalesInput";
import { ModifiedPaymentUpdateManyWithoutFinancedSalesInput } from "./ModifiedPaymentUpdateManyWithoutFinancedSalesInput";
import { ModifiedSalesclerkUpdateManyWithoutFinancedSalesInput } from "./ModifiedSalesclerkUpdateManyWithoutFinancedSalesInput";
import { PaycodePaymentTransacUpdateManyWithoutFinancedSalesInput } from "./PaycodePaymentTransacUpdateManyWithoutFinancedSalesInput";
import { PaymentUpdateManyWithoutFinancedSalesInput } from "./PaymentUpdateManyWithoutFinancedSalesInput";
import { EnumFinancedSalePlazo } from "./EnumFinancedSalePlazo";
import { ProtectionCertActivationUpdateManyWithoutFinancedSalesInput } from "./ProtectionCertActivationUpdateManyWithoutFinancedSalesInput";
import { ProtectionCertWhereUniqueInput } from "../../protectionCert/base/ProtectionCertWhereUniqueInput";
import { RecurringPaymentUpdateManyWithoutFinancedSalesInput } from "./RecurringPaymentUpdateManyWithoutFinancedSalesInput";
import { StripePaymentTransacUpdateManyWithoutFinancedSalesInput } from "./StripePaymentTransacUpdateManyWithoutFinancedSalesInput";
import { WarehouseWhereUniqueInput } from "../../warehouse/base/WarehouseWhereUniqueInput";

@InputType()
class FinancedSaleUpdateInput {
  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  adminAppUnregistered?: number;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  ajusteEnganche?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  ajustePrecioVenta?: string | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  altaPagoRecurrente?: Date | null;

  @ApiProperty({
    required: false,
    type: () => AngazaAccountUpdateManyWithoutFinancedSalesInput,
  })
  @ValidateNested()
  @Type(() => AngazaAccountUpdateManyWithoutFinancedSalesInput)
  @IsOptional()
  @Field(() => AngazaAccountUpdateManyWithoutFinancedSalesInput, {
    nullable: true,
  })
  angazaAccounts?: AngazaAccountUpdateManyWithoutFinancedSalesInput;

  @ApiProperty({
    required: false,
    type: () => AngazaPaymentUpdateManyWithoutFinancedSalesInput,
  })
  @ValidateNested()
  @Type(() => AngazaPaymentUpdateManyWithoutFinancedSalesInput)
  @IsOptional()
  @Field(() => AngazaPaymentUpdateManyWithoutFinancedSalesInput, {
    nullable: true,
  })
  angazaPayments?: AngazaPaymentUpdateManyWithoutFinancedSalesInput;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  authUserId?: number | null;

  @ApiProperty({
    required: false,
    type: () => BillUpdateManyWithoutFinancedSalesInput,
  })
  @ValidateNested()
  @Type(() => BillUpdateManyWithoutFinancedSalesInput)
  @IsOptional()
  @Field(() => BillUpdateManyWithoutFinancedSalesInput, {
    nullable: true,
  })
  bills?: BillUpdateManyWithoutFinancedSalesInput;

  @ApiProperty({
    required: false,
    enum: EnumFinancedSaleBloqueoConfirmado,
  })
  @IsEnum(EnumFinancedSaleBloqueoConfirmado)
  @IsOptional()
  @Field(() => EnumFinancedSaleBloqueoConfirmado, {
    nullable: true,
  })
  bloqueo_confirmado?: "B" | "D" | null;

  @ApiProperty({
    required: false,
    enum: EnumFinancedSaleBloqueoPermanente,
  })
  @IsEnum(EnumFinancedSaleBloqueoPermanente)
  @IsOptional()
  @Field(() => EnumFinancedSaleBloqueoPermanente, {
    nullable: true,
  })
  bloqueo_permanente?: "A" | "I" | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  bloqueoProgramado?: Date | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  canceledUserId?: number | null;

  @ApiProperty({
    required: false,
    type: () => CashCountDetailWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => CashCountDetailWhereUniqueInput)
  @IsOptional()
  @Field(() => CashCountDetailWhereUniqueInput, {
    nullable: true,
  })
  cashCountDetails?: CashCountDetailWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  codigoArtIccid?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  codigoBloqueo?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  comentarios?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  comentariosDescuento?: string | null;

  @ApiProperty({
    required: false,
    type: () => ConektaPaymentTransacUpdateManyWithoutFinancedSalesInput,
  })
  @ValidateNested()
  @Type(() => ConektaPaymentTransacUpdateManyWithoutFinancedSalesInput)
  @IsOptional()
  @Field(() => ConektaPaymentTransacUpdateManyWithoutFinancedSalesInput, {
    nullable: true,
  })
  conektaPaymentTransacs?: ConektaPaymentTransacUpdateManyWithoutFinancedSalesInput;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  createdUserId?: number | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  customerPagoRecurrente?: string | null;

  @ApiProperty({
    required: false,
    type: () => CustomerWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => CustomerWhereUniqueInput)
  @IsOptional()
  @Field(() => CustomerWhereUniqueInput, {
    nullable: true,
  })
  customers?: CustomerWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  desctoPagoOportuno?: number;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  descuentoEspecial?: number | null;

  @ApiProperty({
    required: false,
    type: () => DocumentUpdateManyWithoutFinancedSalesInput,
  })
  @ValidateNested()
  @Type(() => DocumentUpdateManyWithoutFinancedSalesInput)
  @IsOptional()
  @Field(() => DocumentUpdateManyWithoutFinancedSalesInput, {
    nullable: true,
  })
  documents?: DocumentUpdateManyWithoutFinancedSalesInput;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @IsOptional()
  @Field(() => Float, {
    nullable: true,
  })
  enganche?: Decimal;

  @ApiProperty({
    required: false,
    enum: EnumFinancedSaleEstatusBloqueo,
  })
  @IsEnum(EnumFinancedSaleEstatusBloqueo)
  @IsOptional()
  @Field(() => EnumFinancedSaleEstatusBloqueo, {
    nullable: true,
  })
  estatus_bloqueo?: "A" | "B" | "DI" | null;

  @ApiProperty({
    required: false,
    enum: EnumFinancedSaleEstatusEquipo,
  })
  @IsEnum(EnumFinancedSaleEstatusEquipo)
  @IsOptional()
  @Field(() => EnumFinancedSaleEstatusEquipo, {
    nullable: true,
  })
  estatus_equipo?: "A" | "I" | "E" | null;

  @ApiProperty({
    required: false,
    enum: EnumFinancedSaleEstatusFinanc,
  })
  @IsEnum(EnumFinancedSaleEstatusFinanc)
  @IsOptional()
  @Field(() => EnumFinancedSaleEstatusFinanc, {
    nullable: true,
  })
  estatus_financ?: "A" | "T" | "C" | "P" | "R" | "CP" | "CT" | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  fechaCancelo?: Date | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  fechaFinanc?: Date | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  fechaPrimerPago?: Date | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  fechaRegistro?: Date | null;

  @ApiProperty({
    required: false,
    type: () => FinancedAccessoryUpdateManyWithoutFinancedSalesInput,
  })
  @ValidateNested()
  @Type(() => FinancedAccessoryUpdateManyWithoutFinancedSalesInput)
  @IsOptional()
  @Field(() => FinancedAccessoryUpdateManyWithoutFinancedSalesInput, {
    nullable: true,
  })
  financedAccessories?: FinancedAccessoryUpdateManyWithoutFinancedSalesInput;

  @ApiProperty({
    required: false,
    type: () => FinancedSalesLogUpdateManyWithoutFinancedSalesInput,
  })
  @ValidateNested()
  @Type(() => FinancedSalesLogUpdateManyWithoutFinancedSalesInput)
  @IsOptional()
  @Field(() => FinancedSalesLogUpdateManyWithoutFinancedSalesInput, {
    nullable: true,
  })
  financedSalesLog?: FinancedSalesLogUpdateManyWithoutFinancedSalesInput;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  forceAdvancePayments?: number | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  formaPago?: string | null;

  @ApiProperty({
    required: false,
    enum: EnumFinancedSaleHabilitarPagoRecurrente,
  })
  @IsEnum(EnumFinancedSaleHabilitarPagoRecurrente)
  @IsOptional()
  @Field(() => EnumFinancedSaleHabilitarPagoRecurrente, {
    nullable: true,
  })
  habilitar_pago_recurrente?: "A" | "I" | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  iccid?: string | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  idPlan?: number | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => GraphQLBigInt, {
    nullable: true,
  })
  imei?: bigint;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  imei2?: string | null;

  @ApiProperty({
    required: false,
    enum: EnumFinancedSaleIneVerificado,
  })
  @IsEnum(EnumFinancedSaleIneVerificado)
  @IsOptional()
  @Field(() => EnumFinancedSaleIneVerificado, {
    nullable: true,
  })
  ine_verificado?: "S" | "N" | null;

  @ApiProperty({
    required: false,
    type: () => ItemWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => ItemWhereUniqueInput)
  @IsOptional()
  @Field(() => ItemWhereUniqueInput, {
    nullable: true,
  })
  items?: ItemWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => KardexUpdateManyWithoutFinancedSalesInput,
  })
  @ValidateNested()
  @Type(() => KardexUpdateManyWithoutFinancedSalesInput)
  @IsOptional()
  @Field(() => KardexUpdateManyWithoutFinancedSalesInput, {
    nullable: true,
  })
  kardex?: KardexUpdateManyWithoutFinancedSalesInput;

  @ApiProperty({
    required: false,
    type: () => LoanedDeviceUpdateManyWithoutFinancedSalesInput,
  })
  @ValidateNested()
  @Type(() => LoanedDeviceUpdateManyWithoutFinancedSalesInput)
  @IsOptional()
  @Field(() => LoanedDeviceUpdateManyWithoutFinancedSalesInput, {
    nullable: true,
  })
  loanedDevices?: LoanedDeviceUpdateManyWithoutFinancedSalesInput;

  @ApiProperty({
    required: false,
    type: () => LockedDevBadCustomerUpdateManyWithoutFinancedSalesInput,
  })
  @ValidateNested()
  @Type(() => LockedDevBadCustomerUpdateManyWithoutFinancedSalesInput)
  @IsOptional()
  @Field(() => LockedDevBadCustomerUpdateManyWithoutFinancedSalesInput, {
    nullable: true,
  })
  lockedDevBadCustomers?: LockedDevBadCustomerUpdateManyWithoutFinancedSalesInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  mensajeAdvertenciaVenta?: string | null;

  @ApiProperty({
    required: false,
    type: () => ModifiedPaymentUpdateManyWithoutFinancedSalesInput,
  })
  @ValidateNested()
  @Type(() => ModifiedPaymentUpdateManyWithoutFinancedSalesInput)
  @IsOptional()
  @Field(() => ModifiedPaymentUpdateManyWithoutFinancedSalesInput, {
    nullable: true,
  })
  modifiedPayments?: ModifiedPaymentUpdateManyWithoutFinancedSalesInput;

  @ApiProperty({
    required: false,
    type: () => ModifiedSalesclerkUpdateManyWithoutFinancedSalesInput,
  })
  @ValidateNested()
  @Type(() => ModifiedSalesclerkUpdateManyWithoutFinancedSalesInput)
  @IsOptional()
  @Field(() => ModifiedSalesclerkUpdateManyWithoutFinancedSalesInput, {
    nullable: true,
  })
  modifiedSalesclerks?: ModifiedSalesclerkUpdateManyWithoutFinancedSalesInput;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @IsOptional()
  @Field(() => Float, {
    nullable: true,
  })
  montoDescuento?: Decimal | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @IsOptional()
  @Field(() => Float, {
    nullable: true,
  })
  montoFinanciado?: Decimal;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @IsOptional()
  @Field(() => Float, {
    nullable: true,
  })
  montoPago?: Decimal;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @IsOptional()
  @Field(() => Float, {
    nullable: true,
  })
  montoPagoInicial?: Decimal | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  msisdn?: string | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  numPagos?: number;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  numPagosDescuento?: string | null;

  @ApiProperty({
    required: false,
    type: () => PaycodePaymentTransacUpdateManyWithoutFinancedSalesInput,
  })
  @ValidateNested()
  @Type(() => PaycodePaymentTransacUpdateManyWithoutFinancedSalesInput)
  @IsOptional()
  @Field(() => PaycodePaymentTransacUpdateManyWithoutFinancedSalesInput, {
    nullable: true,
  })
  paycodePaymentTransacs?: PaycodePaymentTransacUpdateManyWithoutFinancedSalesInput;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @IsOptional()
  @Field(() => Float, {
    nullable: true,
  })
  paymentAgreement?: Decimal | null;

  @ApiProperty({
    required: false,
    type: () => PaymentUpdateManyWithoutFinancedSalesInput,
  })
  @ValidateNested()
  @Type(() => PaymentUpdateManyWithoutFinancedSalesInput)
  @IsOptional()
  @Field(() => PaymentUpdateManyWithoutFinancedSalesInput, {
    nullable: true,
  })
  payments?: PaymentUpdateManyWithoutFinancedSalesInput;

  @ApiProperty({
    required: false,
    enum: EnumFinancedSalePlazo,
  })
  @IsEnum(EnumFinancedSalePlazo)
  @IsOptional()
  @Field(() => EnumFinancedSalePlazo, {
    nullable: true,
  })
  plazo?: "S" | "Q";

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  porcentajeDescEng?: number | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @IsOptional()
  @Field(() => Float, {
    nullable: true,
  })
  precioLista?: Decimal;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  promotionId?: number | null;

  @ApiProperty({
    required: false,
    type: () => ProtectionCertActivationUpdateManyWithoutFinancedSalesInput,
  })
  @ValidateNested()
  @Type(() => ProtectionCertActivationUpdateManyWithoutFinancedSalesInput)
  @IsOptional()
  @Field(() => ProtectionCertActivationUpdateManyWithoutFinancedSalesInput, {
    nullable: true,
  })
  protectionCertActivations?: ProtectionCertActivationUpdateManyWithoutFinancedSalesInput;

  @ApiProperty({
    required: false,
    type: () => ProtectionCertWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => ProtectionCertWhereUniqueInput)
  @IsOptional()
  @Field(() => ProtectionCertWhereUniqueInput, {
    nullable: true,
  })
  protectionCerts?: ProtectionCertWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  proveedorBloqueo?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  proveedorPagoRecurrente?: string | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  rangoFinalDescuento?: Date | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  rangoInicialDescuento?: Date | null;

  @ApiProperty({
    required: false,
    type: () => RecurringPaymentUpdateManyWithoutFinancedSalesInput,
  })
  @ValidateNested()
  @Type(() => RecurringPaymentUpdateManyWithoutFinancedSalesInput)
  @IsOptional()
  @Field(() => RecurringPaymentUpdateManyWithoutFinancedSalesInput, {
    nullable: true,
  })
  recurringPayments?: RecurringPaymentUpdateManyWithoutFinancedSalesInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  rutaArchivoDescuento?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  rutaFirma?: string | null;

  @ApiProperty({
    required: false,
    type: () => StripePaymentTransacUpdateManyWithoutFinancedSalesInput,
  })
  @ValidateNested()
  @Type(() => StripePaymentTransacUpdateManyWithoutFinancedSalesInput)
  @IsOptional()
  @Field(() => StripePaymentTransacUpdateManyWithoutFinancedSalesInput, {
    nullable: true,
  })
  stripePaymentTransacs?: StripePaymentTransacUpdateManyWithoutFinancedSalesInput;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @IsOptional()
  @Field(() => Float, {
    nullable: true,
  })
  tasaInteres?: Decimal;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  tasaInteresAnual?: number;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  telefono?: string | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  timeToReconfigNextlock?: Date | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  tokenPagoRecurrente?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  ubicacion?: string | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @IsOptional()
  @Field(() => Float, {
    nullable: true,
  })
  ubicacionLatitud?: Decimal | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @IsOptional()
  @Field(() => Float, {
    nullable: true,
  })
  ubicacionLongitud?: Decimal | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  ubicacionMapa?: string | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  ultimaConexion?: Date | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  ultimaLocacion?: string | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  unenrolledUserId?: number | null;

  @ApiProperty({
    required: false,
    type: () => WarehouseWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => WarehouseWhereUniqueInput)
  @IsOptional()
  @Field(() => WarehouseWhereUniqueInput, {
    nullable: true,
  })
  warehouses?: WarehouseWhereUniqueInput | null;
}

export { FinancedSaleUpdateInput as FinancedSaleUpdateInput };
