/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field, Float } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { CashCountWhereUniqueInput } from "../../cashCount/base/CashCountWhereUniqueInput";
import { ValidateNested, IsOptional, IsEnum, IsNumber } from "class-validator";
import { Type } from "class-transformer";
import { CashSaleWhereUniqueInput } from "../../cashSale/base/CashSaleWhereUniqueInput";
import { EnumCashCountDetailEstatusDesglose } from "./EnumCashCountDetailEstatusDesglose";
import { FinancedSaleWhereUniqueInput } from "../../financedSale/base/FinancedSaleWhereUniqueInput";
import { Decimal } from "decimal.js";
import { PaymentWhereUniqueInput } from "../../payment/base/PaymentWhereUniqueInput";

@InputType()
class CashCountDetailUpdateInput {
  @ApiProperty({
    required: false,
    type: () => CashCountWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => CashCountWhereUniqueInput)
  @IsOptional()
  @Field(() => CashCountWhereUniqueInput, {
    nullable: true,
  })
  cashCounts?: CashCountWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => CashSaleWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => CashSaleWhereUniqueInput)
  @IsOptional()
  @Field(() => CashSaleWhereUniqueInput, {
    nullable: true,
  })
  cashSales?: CashSaleWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    enum: EnumCashCountDetailEstatusDesglose,
  })
  @IsEnum(EnumCashCountDetailEstatusDesglose)
  @IsOptional()
  @Field(() => EnumCashCountDetailEstatusDesglose, {
    nullable: true,
  })
  estatus_desglose?: "A" | "I" | null;

  @ApiProperty({
    required: false,
    type: () => FinancedSaleWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => FinancedSaleWhereUniqueInput)
  @IsOptional()
  @Field(() => FinancedSaleWhereUniqueInput, {
    nullable: true,
  })
  financedSales?: FinancedSaleWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @IsOptional()
  @Field(() => Float, {
    nullable: true,
  })
  ingreso?: Decimal | null;

  @ApiProperty({
    required: false,
    type: () => PaymentWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => PaymentWhereUniqueInput)
  @IsOptional()
  @Field(() => PaymentWhereUniqueInput, {
    nullable: true,
  })
  payments?: PaymentWhereUniqueInput | null;
}

export { CashCountDetailUpdateInput as CashCountDetailUpdateInput };
