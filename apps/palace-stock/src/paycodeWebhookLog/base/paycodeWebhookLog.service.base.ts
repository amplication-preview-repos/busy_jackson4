/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";

import {
  Prisma,
  PaycodeWebhookLog as PrismaPaycodeWebhookLog,
  PaycodePaymentTransac as PrismaPaycodePaymentTransac,
} from "@prisma/client";

export class PaycodeWebhookLogServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.PaycodeWebhookLogCountArgs, "select">
  ): Promise<number> {
    return this.prisma.paycodeWebhookLog.count(args);
  }

  async paycodeWebhookLogs<T extends Prisma.PaycodeWebhookLogFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.PaycodeWebhookLogFindManyArgs>
  ): Promise<PrismaPaycodeWebhookLog[]> {
    return this.prisma.paycodeWebhookLog.findMany<Prisma.PaycodeWebhookLogFindManyArgs>(
      args
    );
  }
  async paycodeWebhookLog<T extends Prisma.PaycodeWebhookLogFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.PaycodeWebhookLogFindUniqueArgs>
  ): Promise<PrismaPaycodeWebhookLog | null> {
    return this.prisma.paycodeWebhookLog.findUnique(args);
  }
  async createPaycodeWebhookLog<T extends Prisma.PaycodeWebhookLogCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.PaycodeWebhookLogCreateArgs>
  ): Promise<PrismaPaycodeWebhookLog> {
    return this.prisma.paycodeWebhookLog.create<T>(args);
  }
  async updatePaycodeWebhookLog<T extends Prisma.PaycodeWebhookLogUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.PaycodeWebhookLogUpdateArgs>
  ): Promise<PrismaPaycodeWebhookLog> {
    return this.prisma.paycodeWebhookLog.update<T>(args);
  }
  async deletePaycodeWebhookLog<T extends Prisma.PaycodeWebhookLogDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.PaycodeWebhookLogDeleteArgs>
  ): Promise<PrismaPaycodeWebhookLog> {
    return this.prisma.paycodeWebhookLog.delete(args);
  }

  async getPaycodePaymentTransacs(
    parentId: number
  ): Promise<PrismaPaycodePaymentTransac | null> {
    return this.prisma.paycodeWebhookLog
      .findUnique({
        where: { id: parentId },
      })
      .paycodePaymentTransacs();
  }
}
