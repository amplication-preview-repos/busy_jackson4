/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field, Float } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsString,
  IsInt,
  IsOptional,
  IsEnum,
  ValidateNested,
  IsNumber,
  IsDate,
} from "class-validator";
import { EnumBillBillStatus } from "./EnumBillBillStatus";
import { CashSaleWhereUniqueInput } from "../../cashSale/base/CashSaleWhereUniqueInput";
import { Type } from "class-transformer";
import { Decimal } from "decimal.js";
import { EnumBillFacturaCerrada } from "./EnumBillFacturaCerrada";
import { FinancedSaleWhereUniqueInput } from "../../financedSale/base/FinancedSaleWhereUniqueInput";
import { PaymentWhereUniqueInput } from "../../payment/base/PaymentWhereUniqueInput";
import { EnumBillTipoDocto } from "./EnumBillTipoDocto";
import { EnumBillTipoSucursal } from "./EnumBillTipoSucursal";

@InputType()
class BillCreateInput {
  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  billConcept!: string;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  billingId?: number | null;

  @ApiProperty({
    required: true,
    enum: EnumBillBillStatus,
  })
  @IsEnum(EnumBillBillStatus)
  @Field(() => EnumBillBillStatus)
  bill_status!: "I" | "T" | "C" | "E" | "R" | "N" | "D" | "F";

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  canceledUserId?: number | null;

  @ApiProperty({
    required: false,
    type: () => CashSaleWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => CashSaleWhereUniqueInput)
  @IsOptional()
  @Field(() => CashSaleWhereUniqueInput, {
    nullable: true,
  })
  cashSales?: CashSaleWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  clientCode?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  codigoConcepto?: string | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  complementId?: number | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  createdUserId?: number | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @IsOptional()
  @Field(() => Float, {
    nullable: true,
  })
  engancheFinanc?: Decimal | null;

  @ApiProperty({
    required: true,
    enum: EnumBillFacturaCerrada,
  })
  @IsEnum(EnumBillFacturaCerrada)
  @Field(() => EnumBillFacturaCerrada)
  factura_cerrada!: "F" | "T";

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  fechaActualizacion?: Date | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  fechaCancelacion?: Date | null;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  fechaRegistro!: Date;

  @ApiProperty({
    required: false,
    type: () => FinancedSaleWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => FinancedSaleWhereUniqueInput)
  @IsOptional()
  @Field(() => FinancedSaleWhereUniqueInput, {
    nullable: true,
  })
  financedSales?: FinancedSaleWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  folio?: number | null;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  horaRegistro!: Date;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  mensajeEstatus?: string | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @IsOptional()
  @Field(() => Float, {
    nullable: true,
  })
  montoFactura?: Decimal | null;

  @ApiProperty({
    required: false,
    type: () => PaymentWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => PaymentWhereUniqueInput)
  @IsOptional()
  @Field(() => PaymentWhereUniqueInput, {
    nullable: true,
  })
  payments?: PaymentWhereUniqueInput | null;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  referenceId!: string;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  rutaPdf?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  rutaXml?: string | null;

  @ApiProperty({
    required: true,
    type: Number,
  })
  @IsNumber()
  @Field(() => Float)
  saldoFactura!: Decimal;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @IsOptional()
  @Field(() => Float, {
    nullable: true,
  })
  saldoFacturaTemp?: Decimal | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  serie?: string | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  stampedAt?: Date | null;

  @ApiProperty({
    required: true,
    enum: EnumBillTipoDocto,
  })
  @IsEnum(EnumBillTipoDocto)
  @Field(() => EnumBillTipoDocto)
  tipo_docto!: "FC" | "RE";

  @ApiProperty({
    required: false,
    enum: EnumBillTipoSucursal,
  })
  @IsEnum(EnumBillTipoSucursal)
  @IsOptional()
  @Field(() => EnumBillTipoSucursal, {
    nullable: true,
  })
  tipo_sucursal?: "S" | "D" | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  updatedUserId?: number | null;
}

export { BillCreateInput as BillCreateInput };
