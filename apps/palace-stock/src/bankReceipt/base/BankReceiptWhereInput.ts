/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { StringNullableFilter } from "../../util/StringNullableFilter";
import { Type } from "class-transformer";
import { IsOptional, ValidateNested, IsEnum } from "class-validator";
import { StringFilter } from "../../util/StringFilter";
import { CashCountWhereUniqueInput } from "../../cashCount/base/CashCountWhereUniqueInput";
import { IntFilter } from "../../util/IntFilter";
import { EnumBankReceiptEstatusFicha } from "./EnumBankReceiptEstatusFicha";
import { EnumBankReceiptEstatusValidacion } from "./EnumBankReceiptEstatusValidacion";
import { DateTimeFilter } from "../../util/DateTimeFilter";
import { DateTimeNullableFilter } from "../../util/DateTimeNullableFilter";
import { DecimalFilter } from "../../util/DecimalFilter";
import { EnumBankReceiptTipoDeposito } from "./EnumBankReceiptTipoDeposito";
import { IntNullableFilter } from "../../util/IntNullableFilter";

@InputType()
class BankReceiptWhereInput {
  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  autorizacion?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  banco?: StringFilter;

  @ApiProperty({
    required: false,
    type: () => CashCountWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => CashCountWhereUniqueInput)
  @IsOptional()
  @Field(() => CashCountWhereUniqueInput, {
    nullable: true,
  })
  cashCounts?: CashCountWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: IntFilter,
  })
  @Type(() => IntFilter)
  @IsOptional()
  @Field(() => IntFilter, {
    nullable: true,
  })
  createdUserId?: IntFilter;

  @ApiProperty({
    required: false,
    enum: EnumBankReceiptEstatusFicha,
  })
  @IsEnum(EnumBankReceiptEstatusFicha)
  @IsOptional()
  @Field(() => EnumBankReceiptEstatusFicha, {
    nullable: true,
  })
  estatus_ficha?: "A" | "I";

  @ApiProperty({
    required: false,
    enum: EnumBankReceiptEstatusValidacion,
  })
  @IsEnum(EnumBankReceiptEstatusValidacion)
  @IsOptional()
  @Field(() => EnumBankReceiptEstatusValidacion, {
    nullable: true,
  })
  estatus_validacion?: "SV" | "I" | "C" | "CB";

  @ApiProperty({
    required: false,
    type: DateTimeFilter,
  })
  @Type(() => DateTimeFilter)
  @IsOptional()
  @Field(() => DateTimeFilter, {
    nullable: true,
  })
  fechaDeposito?: DateTimeFilter;

  @ApiProperty({
    required: false,
    type: DateTimeFilter,
  })
  @Type(() => DateTimeFilter)
  @IsOptional()
  @Field(() => DateTimeFilter, {
    nullable: true,
  })
  fechaRegistro?: DateTimeFilter;

  @ApiProperty({
    required: false,
    type: DateTimeNullableFilter,
  })
  @Type(() => DateTimeNullableFilter)
  @IsOptional()
  @Field(() => DateTimeNullableFilter, {
    nullable: true,
  })
  fechaValidacion?: DateTimeNullableFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  folio?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: IntFilter,
  })
  @Type(() => IntFilter)
  @IsOptional()
  @Field(() => IntFilter, {
    nullable: true,
  })
  id?: IntFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  idBanco?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: DecimalFilter,
  })
  @Type(() => DecimalFilter)
  @IsOptional()
  @Field(() => DecimalFilter, {
    nullable: true,
  })
  montoDeposito?: DecimalFilter;

  @ApiProperty({
    required: false,
    enum: EnumBankReceiptTipoDeposito,
  })
  @IsEnum(EnumBankReceiptTipoDeposito)
  @IsOptional()
  @Field(() => EnumBankReceiptTipoDeposito, {
    nullable: true,
  })
  tipo_deposito?: "V" | "T";

  @ApiProperty({
    required: false,
    type: IntNullableFilter,
  })
  @Type(() => IntNullableFilter)
  @IsOptional()
  @Field(() => IntNullableFilter, {
    nullable: true,
  })
  validUserId?: IntNullableFilter;
}

export { BankReceiptWhereInput as BankReceiptWhereInput };
