/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsString,
  IsOptional,
  IsInt,
  IsEnum,
  ValidateNested,
} from "class-validator";
import { EnumBranchOfficeEstatusSucursal } from "./EnumBranchOfficeEstatusSucursal";
import { TransacErrorUpdateManyWithoutBranchOfficesInput } from "./TransacErrorUpdateManyWithoutBranchOfficesInput";
import { Type } from "class-transformer";
import { TransactionUpdateManyWithoutBranchOfficesInput } from "./TransactionUpdateManyWithoutBranchOfficesInput";
import { UserModelWhereUniqueInput } from "../../userModel/base/UserModelWhereUniqueInput";
import { WarehouseUpdateManyWithoutBranchOfficesInput } from "./WarehouseUpdateManyWithoutBranchOfficesInput";

@InputType()
class BranchOfficeUpdateInput {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  branchName?: string;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  branchNo?: number;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  ciudadMunicipio?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  codigoPostal?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  direccion?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  estadoRepublica?: string | null;

  @ApiProperty({
    required: false,
    enum: EnumBranchOfficeEstatusSucursal,
  })
  @IsEnum(EnumBranchOfficeEstatusSucursal)
  @IsOptional()
  @Field(() => EnumBranchOfficeEstatusSucursal, {
    nullable: true,
  })
  estatus_sucursal?: "A" | "I";

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  region?: string | null;

  @ApiProperty({
    required: false,
    type: () => TransacErrorUpdateManyWithoutBranchOfficesInput,
  })
  @ValidateNested()
  @Type(() => TransacErrorUpdateManyWithoutBranchOfficesInput)
  @IsOptional()
  @Field(() => TransacErrorUpdateManyWithoutBranchOfficesInput, {
    nullable: true,
  })
  transacErrors?: TransacErrorUpdateManyWithoutBranchOfficesInput;

  @ApiProperty({
    required: false,
    type: () => TransactionUpdateManyWithoutBranchOfficesInput,
  })
  @ValidateNested()
  @Type(() => TransactionUpdateManyWithoutBranchOfficesInput)
  @IsOptional()
  @Field(() => TransactionUpdateManyWithoutBranchOfficesInput, {
    nullable: true,
  })
  transactionsTransactionsAnotherBranchOfficeIdTobranchOffices?: TransactionUpdateManyWithoutBranchOfficesInput;

  @ApiProperty({
    required: false,
    type: () => TransactionUpdateManyWithoutBranchOfficesInput,
  })
  @ValidateNested()
  @Type(() => TransactionUpdateManyWithoutBranchOfficesInput)
  @IsOptional()
  @Field(() => TransactionUpdateManyWithoutBranchOfficesInput, {
    nullable: true,
  })
  transactionsTransactionsBranchOfficeIdTobranchOffices?: TransactionUpdateManyWithoutBranchOfficesInput;

  @ApiProperty({
    required: false,
    type: () => UserModelWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => UserModelWhereUniqueInput)
  @IsOptional()
  @Field(() => UserModelWhereUniqueInput, {
    nullable: true,
  })
  users?: UserModelWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => WarehouseUpdateManyWithoutBranchOfficesInput,
  })
  @ValidateNested()
  @Type(() => WarehouseUpdateManyWithoutBranchOfficesInput)
  @IsOptional()
  @Field(() => WarehouseUpdateManyWithoutBranchOfficesInput, {
    nullable: true,
  })
  warehouses?: WarehouseUpdateManyWithoutBranchOfficesInput;
}

export { BranchOfficeUpdateInput as BranchOfficeUpdateInput };
