/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { ObjectType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsString,
  IsInt,
  IsOptional,
  IsEnum,
  IsDate,
  ValidateNested,
} from "class-validator";
import { EnumBranchOfficeEstatusSucursal } from "./EnumBranchOfficeEstatusSucursal";
import { Type } from "class-transformer";
import { TransacError } from "../../transacError/base/TransacError";
import { Transaction } from "../../transaction/base/Transaction";
import { UserModel } from "../../userModel/base/UserModel";
import { Warehouse } from "../../warehouse/base/Warehouse";

@ObjectType()
class BranchOffice {
  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  branchName!: string;

  @ApiProperty({
    required: true,
    type: Number,
  })
  @IsInt()
  @Field(() => Number)
  branchNo!: number;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  ciudadMunicipio!: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  codigoPostal!: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  direccion!: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  estadoRepublica!: string | null;

  @ApiProperty({
    required: true,
    enum: EnumBranchOfficeEstatusSucursal,
  })
  @IsEnum(EnumBranchOfficeEstatusSucursal)
  @Field(() => EnumBranchOfficeEstatusSucursal, {
    nullable: true,
  })
  estatus_sucursal?: "A" | "I";

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  fechaRegistro!: Date;

  @ApiProperty({
    required: true,
    type: Number,
  })
  @IsInt()
  @Field(() => Number)
  id!: number;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  region!: string | null;

  @ApiProperty({
    required: false,
    type: () => [TransacError],
  })
  @ValidateNested()
  @Type(() => TransacError)
  @IsOptional()
  transacErrors?: Array<TransacError>;

  @ApiProperty({
    required: false,
    type: () => [Transaction],
  })
  @ValidateNested()
  @Type(() => Transaction)
  @IsOptional()
  transactionsTransactionsAnotherBranchOfficeIdTobranchOffices?: Array<Transaction>;

  @ApiProperty({
    required: false,
    type: () => [Transaction],
  })
  @ValidateNested()
  @Type(() => Transaction)
  @IsOptional()
  transactionsTransactionsBranchOfficeIdTobranchOffices?: Array<Transaction>;

  @ApiProperty({
    required: true,
    type: () => UserModel,
  })
  @ValidateNested()
  @Type(() => UserModel)
  users?: UserModel;

  @ApiProperty({
    required: false,
    type: () => [Warehouse],
  })
  @ValidateNested()
  @Type(() => Warehouse)
  @IsOptional()
  warehouses?: Array<Warehouse>;
}

export { BranchOffice as BranchOffice };
