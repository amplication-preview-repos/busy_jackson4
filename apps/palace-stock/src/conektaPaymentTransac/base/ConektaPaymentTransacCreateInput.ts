/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { AirtimeRechargeCreateNestedManyWithoutConektaPaymentTransacsInput } from "./AirtimeRechargeCreateNestedManyWithoutConektaPaymentTransacsInput";
import {
  ValidateNested,
  IsOptional,
  IsInt,
  IsString,
  IsDate,
} from "class-validator";
import { Type } from "class-transformer";
import { ConektaApiLogCreateNestedManyWithoutConektaPaymentTransacsInput } from "./ConektaApiLogCreateNestedManyWithoutConektaPaymentTransacsInput";
import { FinancedSaleWhereUniqueInput } from "../../financedSale/base/FinancedSaleWhereUniqueInput";
import { OtherCompaniesPaymentCreateNestedManyWithoutConektaPaymentTransacsInput } from "./OtherCompaniesPaymentCreateNestedManyWithoutConektaPaymentTransacsInput";
import { PaymentCreateNestedManyWithoutConektaPaymentTransacsInput } from "./PaymentCreateNestedManyWithoutConektaPaymentTransacsInput";
import { RecurringPaymentCreateNestedManyWithoutConektaPaymentTransacsInput } from "./RecurringPaymentCreateNestedManyWithoutConektaPaymentTransacsInput";
import { UserModelWhereUniqueInput } from "../../userModel/base/UserModelWhereUniqueInput";
import { WarehouseWhereUniqueInput } from "../../warehouse/base/WarehouseWhereUniqueInput";

@InputType()
class ConektaPaymentTransacCreateInput {
  @ApiProperty({
    required: false,
    type: () =>
      AirtimeRechargeCreateNestedManyWithoutConektaPaymentTransacsInput,
  })
  @ValidateNested()
  @Type(() => AirtimeRechargeCreateNestedManyWithoutConektaPaymentTransacsInput)
  @IsOptional()
  @Field(
    () => AirtimeRechargeCreateNestedManyWithoutConektaPaymentTransacsInput,
    {
      nullable: true,
    }
  )
  airtimeRecharges?: AirtimeRechargeCreateNestedManyWithoutConektaPaymentTransacsInput;

  @ApiProperty({
    required: true,
    type: Number,
  })
  @IsInt()
  @Field(() => Number)
  amount!: number;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  authCode?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  clabe?: string | null;

  @ApiProperty({
    required: false,
    type: () => ConektaApiLogCreateNestedManyWithoutConektaPaymentTransacsInput,
  })
  @ValidateNested()
  @Type(() => ConektaApiLogCreateNestedManyWithoutConektaPaymentTransacsInput)
  @IsOptional()
  @Field(
    () => ConektaApiLogCreateNestedManyWithoutConektaPaymentTransacsInput,
    {
      nullable: true,
    }
  )
  conektaApiLog?: ConektaApiLogCreateNestedManyWithoutConektaPaymentTransacsInput;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  createdAt!: Date;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  datosPago?: string | null;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  expiresAt!: Date;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  fechaActualizacion?: Date | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  fechaRegistro?: Date | null;

  @ApiProperty({
    required: true,
    type: () => FinancedSaleWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => FinancedSaleWhereUniqueInput)
  @Field(() => FinancedSaleWhereUniqueInput)
  financedSales!: FinancedSaleWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  habilitarPagoRecurrente?: number | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  issuer?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  last4?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  metodoPago?: string | null;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  orderId!: string;

  @ApiProperty({
    required: false,
    type: () =>
      OtherCompaniesPaymentCreateNestedManyWithoutConektaPaymentTransacsInput,
  })
  @ValidateNested()
  @Type(
    () =>
      OtherCompaniesPaymentCreateNestedManyWithoutConektaPaymentTransacsInput
  )
  @IsOptional()
  @Field(
    () =>
      OtherCompaniesPaymentCreateNestedManyWithoutConektaPaymentTransacsInput,
    {
      nullable: true,
    }
  )
  otherCompaniesPayments?: OtherCompaniesPaymentCreateNestedManyWithoutConektaPaymentTransacsInput;

  @ApiProperty({
    required: false,
    type: () => PaymentCreateNestedManyWithoutConektaPaymentTransacsInput,
  })
  @ValidateNested()
  @Type(() => PaymentCreateNestedManyWithoutConektaPaymentTransacsInput)
  @IsOptional()
  @Field(() => PaymentCreateNestedManyWithoutConektaPaymentTransacsInput, {
    nullable: true,
  })
  payments?: PaymentCreateNestedManyWithoutConektaPaymentTransacsInput;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  payStatus!: string;

  @ApiProperty({
    required: false,
    type: () =>
      RecurringPaymentCreateNestedManyWithoutConektaPaymentTransacsInput,
  })
  @ValidateNested()
  @Type(
    () => RecurringPaymentCreateNestedManyWithoutConektaPaymentTransacsInput
  )
  @IsOptional()
  @Field(
    () => RecurringPaymentCreateNestedManyWithoutConektaPaymentTransacsInput,
    {
      nullable: true,
    }
  )
  recurringPayments?: RecurringPaymentCreateNestedManyWithoutConektaPaymentTransacsInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  reference?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  rutaRef?: string | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  updatedAt?: Date | null;

  @ApiProperty({
    required: false,
    type: () => UserModelWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => UserModelWhereUniqueInput)
  @IsOptional()
  @Field(() => UserModelWhereUniqueInput, {
    nullable: true,
  })
  users?: UserModelWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => WarehouseWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => WarehouseWhereUniqueInput)
  @IsOptional()
  @Field(() => WarehouseWhereUniqueInput, {
    nullable: true,
  })
  warehouses?: WarehouseWhereUniqueInput | null;
}

export { ConektaPaymentTransacCreateInput as ConektaPaymentTransacCreateInput };
