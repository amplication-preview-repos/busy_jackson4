/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { ObjectType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { AirtimeRecharge } from "../../airtimeRecharge/base/AirtimeRecharge";
import {
  ValidateNested,
  IsOptional,
  IsInt,
  IsString,
  IsDate,
} from "class-validator";
import { Type } from "class-transformer";
import { ConektaApiLog } from "../../conektaApiLog/base/ConektaApiLog";
import { FinancedSale } from "../../financedSale/base/FinancedSale";
import { OtherCompaniesPayment } from "../../otherCompaniesPayment/base/OtherCompaniesPayment";
import { Payment } from "../../payment/base/Payment";
import { RecurringPayment } from "../../recurringPayment/base/RecurringPayment";
import { UserModel } from "../../userModel/base/UserModel";
import { Warehouse } from "../../warehouse/base/Warehouse";

@ObjectType()
class ConektaPaymentTransac {
  @ApiProperty({
    required: false,
    type: () => [AirtimeRecharge],
  })
  @ValidateNested()
  @Type(() => AirtimeRecharge)
  @IsOptional()
  airtimeRecharges?: Array<AirtimeRecharge>;

  @ApiProperty({
    required: true,
    type: Number,
  })
  @IsInt()
  @Field(() => Number)
  amount!: number;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  authCode!: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  clabe!: string | null;

  @ApiProperty({
    required: false,
    type: () => [ConektaApiLog],
  })
  @ValidateNested()
  @Type(() => ConektaApiLog)
  @IsOptional()
  conektaApiLog?: Array<ConektaApiLog>;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  createdAt!: Date;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  datosPago!: string | null;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  expiresAt!: Date;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  fechaActualizacion!: Date | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  fechaRegistro!: Date | null;

  @ApiProperty({
    required: true,
    type: () => FinancedSale,
  })
  @ValidateNested()
  @Type(() => FinancedSale)
  financedSales?: FinancedSale;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  habilitarPagoRecurrente!: number | null;

  @ApiProperty({
    required: true,
    type: Number,
  })
  @IsInt()
  @Field(() => Number)
  id!: number;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  issuer!: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  last4!: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  metodoPago!: string | null;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  orderId!: string;

  @ApiProperty({
    required: false,
    type: () => [OtherCompaniesPayment],
  })
  @ValidateNested()
  @Type(() => OtherCompaniesPayment)
  @IsOptional()
  otherCompaniesPayments?: Array<OtherCompaniesPayment>;

  @ApiProperty({
    required: false,
    type: () => [Payment],
  })
  @ValidateNested()
  @Type(() => Payment)
  @IsOptional()
  payments?: Array<Payment>;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  payStatus!: string;

  @ApiProperty({
    required: false,
    type: () => [RecurringPayment],
  })
  @ValidateNested()
  @Type(() => RecurringPayment)
  @IsOptional()
  recurringPayments?: Array<RecurringPayment>;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  reference!: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  rutaRef!: string | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  updatedAt!: Date | null;

  @ApiProperty({
    required: false,
    type: () => UserModel,
  })
  @ValidateNested()
  @Type(() => UserModel)
  @IsOptional()
  users?: UserModel | null;

  @ApiProperty({
    required: false,
    type: () => Warehouse,
  })
  @ValidateNested()
  @Type(() => Warehouse)
  @IsOptional()
  warehouses?: Warehouse | null;
}

export { ConektaPaymentTransac as ConektaPaymentTransac };
