/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { AirtimeRechargeUpdateManyWithoutConektaPaymentTransacsInput } from "./AirtimeRechargeUpdateManyWithoutConektaPaymentTransacsInput";
import {
  ValidateNested,
  IsOptional,
  IsInt,
  IsString,
  IsDate,
} from "class-validator";
import { Type } from "class-transformer";
import { ConektaApiLogUpdateManyWithoutConektaPaymentTransacsInput } from "./ConektaApiLogUpdateManyWithoutConektaPaymentTransacsInput";
import { FinancedSaleWhereUniqueInput } from "../../financedSale/base/FinancedSaleWhereUniqueInput";
import { OtherCompaniesPaymentUpdateManyWithoutConektaPaymentTransacsInput } from "./OtherCompaniesPaymentUpdateManyWithoutConektaPaymentTransacsInput";
import { PaymentUpdateManyWithoutConektaPaymentTransacsInput } from "./PaymentUpdateManyWithoutConektaPaymentTransacsInput";
import { RecurringPaymentUpdateManyWithoutConektaPaymentTransacsInput } from "./RecurringPaymentUpdateManyWithoutConektaPaymentTransacsInput";
import { UserModelWhereUniqueInput } from "../../userModel/base/UserModelWhereUniqueInput";
import { WarehouseWhereUniqueInput } from "../../warehouse/base/WarehouseWhereUniqueInput";

@InputType()
class ConektaPaymentTransacUpdateInput {
  @ApiProperty({
    required: false,
    type: () => AirtimeRechargeUpdateManyWithoutConektaPaymentTransacsInput,
  })
  @ValidateNested()
  @Type(() => AirtimeRechargeUpdateManyWithoutConektaPaymentTransacsInput)
  @IsOptional()
  @Field(() => AirtimeRechargeUpdateManyWithoutConektaPaymentTransacsInput, {
    nullable: true,
  })
  airtimeRecharges?: AirtimeRechargeUpdateManyWithoutConektaPaymentTransacsInput;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  amount?: number;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  authCode?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  clabe?: string | null;

  @ApiProperty({
    required: false,
    type: () => ConektaApiLogUpdateManyWithoutConektaPaymentTransacsInput,
  })
  @ValidateNested()
  @Type(() => ConektaApiLogUpdateManyWithoutConektaPaymentTransacsInput)
  @IsOptional()
  @Field(() => ConektaApiLogUpdateManyWithoutConektaPaymentTransacsInput, {
    nullable: true,
  })
  conektaApiLog?: ConektaApiLogUpdateManyWithoutConektaPaymentTransacsInput;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  createdAt?: Date;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  datosPago?: string | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  expiresAt?: Date;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  fechaActualizacion?: Date | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  fechaRegistro?: Date | null;

  @ApiProperty({
    required: false,
    type: () => FinancedSaleWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => FinancedSaleWhereUniqueInput)
  @IsOptional()
  @Field(() => FinancedSaleWhereUniqueInput, {
    nullable: true,
  })
  financedSales?: FinancedSaleWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  habilitarPagoRecurrente?: number | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  issuer?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  last4?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  metodoPago?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  orderId?: string;

  @ApiProperty({
    required: false,
    type: () =>
      OtherCompaniesPaymentUpdateManyWithoutConektaPaymentTransacsInput,
  })
  @ValidateNested()
  @Type(() => OtherCompaniesPaymentUpdateManyWithoutConektaPaymentTransacsInput)
  @IsOptional()
  @Field(
    () => OtherCompaniesPaymentUpdateManyWithoutConektaPaymentTransacsInput,
    {
      nullable: true,
    }
  )
  otherCompaniesPayments?: OtherCompaniesPaymentUpdateManyWithoutConektaPaymentTransacsInput;

  @ApiProperty({
    required: false,
    type: () => PaymentUpdateManyWithoutConektaPaymentTransacsInput,
  })
  @ValidateNested()
  @Type(() => PaymentUpdateManyWithoutConektaPaymentTransacsInput)
  @IsOptional()
  @Field(() => PaymentUpdateManyWithoutConektaPaymentTransacsInput, {
    nullable: true,
  })
  payments?: PaymentUpdateManyWithoutConektaPaymentTransacsInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  payStatus?: string;

  @ApiProperty({
    required: false,
    type: () => RecurringPaymentUpdateManyWithoutConektaPaymentTransacsInput,
  })
  @ValidateNested()
  @Type(() => RecurringPaymentUpdateManyWithoutConektaPaymentTransacsInput)
  @IsOptional()
  @Field(() => RecurringPaymentUpdateManyWithoutConektaPaymentTransacsInput, {
    nullable: true,
  })
  recurringPayments?: RecurringPaymentUpdateManyWithoutConektaPaymentTransacsInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  reference?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  rutaRef?: string | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  updatedAt?: Date | null;

  @ApiProperty({
    required: false,
    type: () => UserModelWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => UserModelWhereUniqueInput)
  @IsOptional()
  @Field(() => UserModelWhereUniqueInput, {
    nullable: true,
  })
  users?: UserModelWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => WarehouseWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => WarehouseWhereUniqueInput)
  @IsOptional()
  @Field(() => WarehouseWhereUniqueInput, {
    nullable: true,
  })
  warehouses?: WarehouseWhereUniqueInput | null;
}

export { ConektaPaymentTransacUpdateInput as ConektaPaymentTransacUpdateInput };
