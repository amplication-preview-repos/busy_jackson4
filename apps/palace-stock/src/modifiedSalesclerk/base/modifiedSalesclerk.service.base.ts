/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";

import {
  Prisma,
  ModifiedSalesclerk as PrismaModifiedSalesclerk,
  FinancedSale as PrismaFinancedSale,
} from "@prisma/client";

export class ModifiedSalesclerkServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.ModifiedSalesclerkCountArgs, "select">
  ): Promise<number> {
    return this.prisma.modifiedSalesclerk.count(args);
  }

  async modifiedSalesclerks<T extends Prisma.ModifiedSalesclerkFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.ModifiedSalesclerkFindManyArgs>
  ): Promise<PrismaModifiedSalesclerk[]> {
    return this.prisma.modifiedSalesclerk.findMany<Prisma.ModifiedSalesclerkFindManyArgs>(
      args
    );
  }
  async modifiedSalesclerk<T extends Prisma.ModifiedSalesclerkFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.ModifiedSalesclerkFindUniqueArgs>
  ): Promise<PrismaModifiedSalesclerk | null> {
    return this.prisma.modifiedSalesclerk.findUnique(args);
  }
  async createModifiedSalesclerk<T extends Prisma.ModifiedSalesclerkCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.ModifiedSalesclerkCreateArgs>
  ): Promise<PrismaModifiedSalesclerk> {
    return this.prisma.modifiedSalesclerk.create<T>(args);
  }
  async updateModifiedSalesclerk<T extends Prisma.ModifiedSalesclerkUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.ModifiedSalesclerkUpdateArgs>
  ): Promise<PrismaModifiedSalesclerk> {
    return this.prisma.modifiedSalesclerk.update<T>(args);
  }
  async deleteModifiedSalesclerk<T extends Prisma.ModifiedSalesclerkDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.ModifiedSalesclerkDeleteArgs>
  ): Promise<PrismaModifiedSalesclerk> {
    return this.prisma.modifiedSalesclerk.delete(args);
  }

  async getFinancedSales(parentId: number): Promise<PrismaFinancedSale | null> {
    return this.prisma.modifiedSalesclerk
      .findUnique({
        where: { id: parentId },
      })
      .financedSales();
  }
}
