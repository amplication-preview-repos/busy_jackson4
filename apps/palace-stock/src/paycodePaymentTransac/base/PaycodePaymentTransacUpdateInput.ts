/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { AirtimeRechargeUpdateManyWithoutPaycodePaymentTransacsInput } from "./AirtimeRechargeUpdateManyWithoutPaycodePaymentTransacsInput";
import {
  ValidateNested,
  IsOptional,
  IsString,
  IsDate,
  IsInt,
} from "class-validator";
import { Type } from "class-transformer";
import { FinancedSaleWhereUniqueInput } from "../../financedSale/base/FinancedSaleWhereUniqueInput";
import { PaycodeApiLogUpdateManyWithoutPaycodePaymentTransacsInput } from "./PaycodeApiLogUpdateManyWithoutPaycodePaymentTransacsInput";
import { PaycodeWebhookLogUpdateManyWithoutPaycodePaymentTransacsInput } from "./PaycodeWebhookLogUpdateManyWithoutPaycodePaymentTransacsInput";
import { PaymentUpdateManyWithoutPaycodePaymentTransacsInput } from "./PaymentUpdateManyWithoutPaycodePaymentTransacsInput";
import { RecurringPaymentUpdateManyWithoutPaycodePaymentTransacsInput } from "./RecurringPaymentUpdateManyWithoutPaycodePaymentTransacsInput";

@InputType()
class PaycodePaymentTransacUpdateInput {
  @ApiProperty({
    required: false,
    type: () => AirtimeRechargeUpdateManyWithoutPaycodePaymentTransacsInput,
  })
  @ValidateNested()
  @Type(() => AirtimeRechargeUpdateManyWithoutPaycodePaymentTransacsInput)
  @IsOptional()
  @Field(() => AirtimeRechargeUpdateManyWithoutPaycodePaymentTransacsInput, {
    nullable: true,
  })
  airtimeRecharges?: AirtimeRechargeUpdateManyWithoutPaycodePaymentTransacsInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  bank?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  beneficiary?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  clabe?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  concept?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  datosPago?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  displayMessage?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  estatusCobro?: string;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  fechaRegistro?: Date;

  @ApiProperty({
    required: false,
    type: () => FinancedSaleWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => FinancedSaleWhereUniqueInput)
  @IsOptional()
  @Field(() => FinancedSaleWhereUniqueInput, {
    nullable: true,
  })
  financedSales?: FinancedSaleWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  habilitarPagoRecurrente?: number | null;

  @ApiProperty({
    required: false,
    type: () => PaycodeApiLogUpdateManyWithoutPaycodePaymentTransacsInput,
  })
  @ValidateNested()
  @Type(() => PaycodeApiLogUpdateManyWithoutPaycodePaymentTransacsInput)
  @IsOptional()
  @Field(() => PaycodeApiLogUpdateManyWithoutPaycodePaymentTransacsInput, {
    nullable: true,
  })
  paycodeApiLog?: PaycodeApiLogUpdateManyWithoutPaycodePaymentTransacsInput;

  @ApiProperty({
    required: false,
    type: () => PaycodeWebhookLogUpdateManyWithoutPaycodePaymentTransacsInput,
  })
  @ValidateNested()
  @Type(() => PaycodeWebhookLogUpdateManyWithoutPaycodePaymentTransacsInput)
  @IsOptional()
  @Field(() => PaycodeWebhookLogUpdateManyWithoutPaycodePaymentTransacsInput, {
    nullable: true,
  })
  paycodeWebhookLog?: PaycodeWebhookLogUpdateManyWithoutPaycodePaymentTransacsInput;

  @ApiProperty({
    required: false,
    type: () => PaymentUpdateManyWithoutPaycodePaymentTransacsInput,
  })
  @ValidateNested()
  @Type(() => PaymentUpdateManyWithoutPaycodePaymentTransacsInput)
  @IsOptional()
  @Field(() => PaymentUpdateManyWithoutPaycodePaymentTransacsInput, {
    nullable: true,
  })
  payments?: PaymentUpdateManyWithoutPaycodePaymentTransacsInput;

  @ApiProperty({
    required: false,
    type: () => RecurringPaymentUpdateManyWithoutPaycodePaymentTransacsInput,
  })
  @ValidateNested()
  @Type(() => RecurringPaymentUpdateManyWithoutPaycodePaymentTransacsInput)
  @IsOptional()
  @Field(() => RecurringPaymentUpdateManyWithoutPaycodePaymentTransacsInput, {
    nullable: true,
  })
  recurringPayments?: RecurringPaymentUpdateManyWithoutPaycodePaymentTransacsInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  referenceNumber?: string;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  trackCode?: string | null;
}

export { PaycodePaymentTransacUpdateInput as PaycodePaymentTransacUpdateInput };
