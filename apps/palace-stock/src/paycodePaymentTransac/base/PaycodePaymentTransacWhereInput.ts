/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { AirtimeRechargeListRelationFilter } from "../../airtimeRecharge/base/AirtimeRechargeListRelationFilter";
import { ValidateNested, IsOptional } from "class-validator";
import { Type } from "class-transformer";
import { StringNullableFilter } from "../../util/StringNullableFilter";
import { StringFilter } from "../../util/StringFilter";
import { DateTimeFilter } from "../../util/DateTimeFilter";
import { FinancedSaleWhereUniqueInput } from "../../financedSale/base/FinancedSaleWhereUniqueInput";
import { IntNullableFilter } from "../../util/IntNullableFilter";
import { IntFilter } from "../../util/IntFilter";
import { PaycodeApiLogListRelationFilter } from "../../paycodeApiLog/base/PaycodeApiLogListRelationFilter";
import { PaycodeWebhookLogListRelationFilter } from "../../paycodeWebhookLog/base/PaycodeWebhookLogListRelationFilter";
import { PaymentListRelationFilter } from "../../payment/base/PaymentListRelationFilter";
import { RecurringPaymentListRelationFilter } from "../../recurringPayment/base/RecurringPaymentListRelationFilter";

@InputType()
class PaycodePaymentTransacWhereInput {
  @ApiProperty({
    required: false,
    type: () => AirtimeRechargeListRelationFilter,
  })
  @ValidateNested()
  @Type(() => AirtimeRechargeListRelationFilter)
  @IsOptional()
  @Field(() => AirtimeRechargeListRelationFilter, {
    nullable: true,
  })
  airtimeRecharges?: AirtimeRechargeListRelationFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  bank?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  beneficiary?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  clabe?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  concept?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  datosPago?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  displayMessage?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  estatusCobro?: StringFilter;

  @ApiProperty({
    required: false,
    type: DateTimeFilter,
  })
  @Type(() => DateTimeFilter)
  @IsOptional()
  @Field(() => DateTimeFilter, {
    nullable: true,
  })
  fechaRegistro?: DateTimeFilter;

  @ApiProperty({
    required: false,
    type: () => FinancedSaleWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => FinancedSaleWhereUniqueInput)
  @IsOptional()
  @Field(() => FinancedSaleWhereUniqueInput, {
    nullable: true,
  })
  financedSales?: FinancedSaleWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: IntNullableFilter,
  })
  @Type(() => IntNullableFilter)
  @IsOptional()
  @Field(() => IntNullableFilter, {
    nullable: true,
  })
  habilitarPagoRecurrente?: IntNullableFilter;

  @ApiProperty({
    required: false,
    type: IntFilter,
  })
  @Type(() => IntFilter)
  @IsOptional()
  @Field(() => IntFilter, {
    nullable: true,
  })
  id?: IntFilter;

  @ApiProperty({
    required: false,
    type: () => PaycodeApiLogListRelationFilter,
  })
  @ValidateNested()
  @Type(() => PaycodeApiLogListRelationFilter)
  @IsOptional()
  @Field(() => PaycodeApiLogListRelationFilter, {
    nullable: true,
  })
  paycodeApiLog?: PaycodeApiLogListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => PaycodeWebhookLogListRelationFilter,
  })
  @ValidateNested()
  @Type(() => PaycodeWebhookLogListRelationFilter)
  @IsOptional()
  @Field(() => PaycodeWebhookLogListRelationFilter, {
    nullable: true,
  })
  paycodeWebhookLog?: PaycodeWebhookLogListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => PaymentListRelationFilter,
  })
  @ValidateNested()
  @Type(() => PaymentListRelationFilter)
  @IsOptional()
  @Field(() => PaymentListRelationFilter, {
    nullable: true,
  })
  payments?: PaymentListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => RecurringPaymentListRelationFilter,
  })
  @ValidateNested()
  @Type(() => RecurringPaymentListRelationFilter)
  @IsOptional()
  @Field(() => RecurringPaymentListRelationFilter, {
    nullable: true,
  })
  recurringPayments?: RecurringPaymentListRelationFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  referenceNumber?: StringFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  trackCode?: StringNullableFilter;
}

export { PaycodePaymentTransacWhereInput as PaycodePaymentTransacWhereInput };
