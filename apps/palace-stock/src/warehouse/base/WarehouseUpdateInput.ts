/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field, Float } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";

import {
  IsString,
  IsOptional,
  IsNumber,
  IsInt,
  ValidateNested,
  IsEnum,
  IsBoolean,
  IsDate,
} from "class-validator";

import { Decimal } from "decimal.js";
import { BranchManagerUpdateManyWithoutWarehousesInput } from "./BranchManagerUpdateManyWithoutWarehousesInput";
import { Type } from "class-transformer";
import { BranchOfficeWhereUniqueInput } from "../../branchOffice/base/BranchOfficeWhereUniqueInput";
import { EnumWarehouseCargarSoloCapturasCamara } from "./EnumWarehouseCargarSoloCapturasCamara";
import { CashCountUpdateManyWithoutWarehousesInput } from "./CashCountUpdateManyWithoutWarehousesInput";
import { CashSaleUpdateManyWithoutWarehousesInput } from "./CashSaleUpdateManyWithoutWarehousesInput";
import { ConektaPaymentTransacUpdateManyWithoutWarehousesInput } from "./ConektaPaymentTransacUpdateManyWithoutWarehousesInput";
import { CustomerUpdateManyWithoutWarehousesInput } from "./CustomerUpdateManyWithoutWarehousesInput";
import { EnumWarehouseDeshabilitarValidarOtroFinanc } from "./EnumWarehouseDeshabilitarValidarOtroFinanc";
import { EnumWarehouseEstatusAlmacen } from "./EnumWarehouseEstatusAlmacen";
import { EstimateUpdateManyWithoutWarehousesInput } from "./EstimateUpdateManyWithoutWarehousesInput";
import { FinancedSaleUpdateManyWithoutWarehousesInput } from "./FinancedSaleUpdateManyWithoutWarehousesInput";
import { EnumWarehouseHabilitarEnvioSms } from "./EnumWarehouseHabilitarEnvioSms";
import { EnumWarehouseHabilitarEnvioWhatsapp } from "./EnumWarehouseHabilitarEnvioWhatsapp";
import { EnumWarehouseImpresionComprobantesPago } from "./EnumWarehouseImpresionComprobantesPago";
import { KardexUpdateManyWithoutWarehousesInput } from "./KardexUpdateManyWithoutWarehousesInput";
import { KardexSeryUpdateManyWithoutWarehousesInput } from "./KardexSeryUpdateManyWithoutWarehousesInput";
import { EnumWarehouseMesaControl } from "./EnumWarehouseMesaControl";
import { EnumWarehouseMetodoEnvioMensaje } from "./EnumWarehouseMetodoEnvioMensaje";
import { NubariumValidationUpdateManyWithoutWarehousesInput } from "./NubariumValidationUpdateManyWithoutWarehousesInput";
import { OtherCompaniesPaymentUpdateManyWithoutWarehousesInput } from "./OtherCompaniesPaymentUpdateManyWithoutWarehousesInput";
import { PaymentInterestUpdateManyWithoutWarehousesInput } from "./PaymentInterestUpdateManyWithoutWarehousesInput";
import { PaymentUpdateManyWithoutWarehousesInput } from "./PaymentUpdateManyWithoutWarehousesInput";
import { PersonalLoanUpdateManyWithoutWarehousesInput } from "./PersonalLoanUpdateManyWithoutWarehousesInput";
import { ProtectionCertActivationUpdateManyWithoutWarehousesInput } from "./ProtectionCertActivationUpdateManyWithoutWarehousesInput";
import { ProtectionCertUpdateManyWithoutWarehousesInput } from "./ProtectionCertUpdateManyWithoutWarehousesInput";
import { StockUpdateManyWithoutWarehousesInput } from "./StockUpdateManyWithoutWarehousesInput";
import { StockSeryUpdateManyWithoutWarehousesInput } from "./StockSeryUpdateManyWithoutWarehousesInput";
import { EnumWarehouseTipoSucursal } from "./EnumWarehouseTipoSucursal";
import { TransactionUpdateManyWithoutWarehousesInput } from "./TransactionUpdateManyWithoutWarehousesInput";
import { WarehouseGrantUpdateManyWithoutWarehousesInput } from "./WarehouseGrantUpdateManyWithoutWarehousesInput";
import { WarehouseLoanAmountUpdateManyWithoutWarehousesInput } from "./WarehouseLoanAmountUpdateManyWithoutWarehousesInput";
import { WarehouseMandatoryDocUpdateManyWithoutWarehousesInput } from "./WarehouseMandatoryDocUpdateManyWithoutWarehousesInput";

@InputType()
class WarehouseUpdateInput {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  ajusteDesctoFinanc?: string | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @IsOptional()
  @Field(() => Float, {
    nullable: true,
  })
  ajusteMontoFijoEnganche?: Decimal | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  autorizarIneErroneaNubarium?: number | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  autorizarNombresSinCoincidencia?: number | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  autorizarSelfieSinCoincidencia?: number | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  bloqueoVentaComputadora?: number;

  @ApiProperty({
    required: false,
    type: () => BranchManagerUpdateManyWithoutWarehousesInput,
  })
  @ValidateNested()
  @Type(() => BranchManagerUpdateManyWithoutWarehousesInput)
  @IsOptional()
  @Field(() => BranchManagerUpdateManyWithoutWarehousesInput, {
    nullable: true,
  })
  branchManagers?: BranchManagerUpdateManyWithoutWarehousesInput;

  @ApiProperty({
    required: false,
    type: () => BranchOfficeWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => BranchOfficeWhereUniqueInput)
  @IsOptional()
  @Field(() => BranchOfficeWhereUniqueInput, {
    nullable: true,
  })
  branchOffices?: BranchOfficeWhereUniqueInput;

  @ApiProperty({
    required: false,
    enum: EnumWarehouseCargarSoloCapturasCamara,
  })
  @IsEnum(EnumWarehouseCargarSoloCapturasCamara)
  @IsOptional()
  @Field(() => EnumWarehouseCargarSoloCapturasCamara, {
    nullable: true,
  })
  cargar_solo_capturas_camara?: "A" | "I";

  @ApiProperty({
    required: false,
    type: () => CashCountUpdateManyWithoutWarehousesInput,
  })
  @ValidateNested()
  @Type(() => CashCountUpdateManyWithoutWarehousesInput)
  @IsOptional()
  @Field(() => CashCountUpdateManyWithoutWarehousesInput, {
    nullable: true,
  })
  cashCounts?: CashCountUpdateManyWithoutWarehousesInput;

  @ApiProperty({
    required: false,
    type: () => CashSaleUpdateManyWithoutWarehousesInput,
  })
  @ValidateNested()
  @Type(() => CashSaleUpdateManyWithoutWarehousesInput)
  @IsOptional()
  @Field(() => CashSaleUpdateManyWithoutWarehousesInput, {
    nullable: true,
  })
  cashSales?: CashSaleUpdateManyWithoutWarehousesInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  catalogoCodigoPostal?: string | null;

  @ApiProperty({
    required: false,
    type: () => ConektaPaymentTransacUpdateManyWithoutWarehousesInput,
  })
  @ValidateNested()
  @Type(() => ConektaPaymentTransacUpdateManyWithoutWarehousesInput)
  @IsOptional()
  @Field(() => ConektaPaymentTransacUpdateManyWithoutWarehousesInput, {
    nullable: true,
  })
  conektaPaymentTransacs?: ConektaPaymentTransacUpdateManyWithoutWarehousesInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  confSaltarValidacionesPrestamosPersonales?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  contratoAlmacen?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  contratoAlmacenPdf?: string | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  createdUserId?: number;

  @ApiProperty({
    required: false,
    type: () => CustomerUpdateManyWithoutWarehousesInput,
  })
  @ValidateNested()
  @Type(() => CustomerUpdateManyWithoutWarehousesInput)
  @IsOptional()
  @Field(() => CustomerUpdateManyWithoutWarehousesInput, {
    nullable: true,
  })
  customers?: CustomerUpdateManyWithoutWarehousesInput;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  desctoPagoOportuno?: number;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  desctoPagoOportunoPrestamos?: number;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  descuentoEspecial?: number | null;

  @ApiProperty({
    required: false,
    enum: EnumWarehouseDeshabilitarValidarOtroFinanc,
  })
  @IsEnum(EnumWarehouseDeshabilitarValidarOtroFinanc)
  @IsOptional()
  @Field(() => EnumWarehouseDeshabilitarValidarOtroFinanc, {
    nullable: true,
  })
  deshabilitar_validar_otro_financ?: "A" | "I" | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  domicilioFiscal?: string | null;

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  dontLockDevices?: boolean | null;

  @ApiProperty({
    required: false,
    enum: EnumWarehouseEstatusAlmacen,
  })
  @IsEnum(EnumWarehouseEstatusAlmacen)
  @IsOptional()
  @Field(() => EnumWarehouseEstatusAlmacen, {
    nullable: true,
  })
  estatus_almacen?: "A" | "I";

  @ApiProperty({
    required: false,
    type: () => EstimateUpdateManyWithoutWarehousesInput,
  })
  @ValidateNested()
  @Type(() => EstimateUpdateManyWithoutWarehousesInput)
  @IsOptional()
  @Field(() => EstimateUpdateManyWithoutWarehousesInput, {
    nullable: true,
  })
  estimates?: EstimateUpdateManyWithoutWarehousesInput;

  @ApiProperty({
    required: false,
    type: () => FinancedSaleUpdateManyWithoutWarehousesInput,
  })
  @ValidateNested()
  @Type(() => FinancedSaleUpdateManyWithoutWarehousesInput)
  @IsOptional()
  @Field(() => FinancedSaleUpdateManyWithoutWarehousesInput, {
    nullable: true,
  })
  financedSales?: FinancedSaleUpdateManyWithoutWarehousesInput;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  forceAdvancePayments?: number | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  habilitarBloqueoClienteCp?: number | null;

  @ApiProperty({
    required: false,
    enum: EnumWarehouseHabilitarEnvioSms,
  })
  @IsEnum(EnumWarehouseHabilitarEnvioSms)
  @IsOptional()
  @Field(() => EnumWarehouseHabilitarEnvioSms, {
    nullable: true,
  })
  habilitar_envio_sms?: "A" | "I" | null;

  @ApiProperty({
    required: false,
    enum: EnumWarehouseHabilitarEnvioWhatsapp,
  })
  @IsEnum(EnumWarehouseHabilitarEnvioWhatsapp)
  @IsOptional()
  @Field(() => EnumWarehouseHabilitarEnvioWhatsapp, {
    nullable: true,
  })
  habilitar_envio_whatsapp?: "A" | "I" | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  habilitarPrestamoEquipos?: number | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  horaInicioPagos?: Date | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  horaLimitePagos?: Date | null;

  @ApiProperty({
    required: false,
    enum: EnumWarehouseImpresionComprobantesPago,
  })
  @IsEnum(EnumWarehouseImpresionComprobantesPago)
  @IsOptional()
  @Field(() => EnumWarehouseImpresionComprobantesPago, {
    nullable: true,
  })
  impresion_comprobantes_pago?: "IC" | "IT" | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  incluirEngancheCorte?: number | null;

  @ApiProperty({
    required: false,
    type: () => KardexUpdateManyWithoutWarehousesInput,
  })
  @ValidateNested()
  @Type(() => KardexUpdateManyWithoutWarehousesInput)
  @IsOptional()
  @Field(() => KardexUpdateManyWithoutWarehousesInput, {
    nullable: true,
  })
  kardex?: KardexUpdateManyWithoutWarehousesInput;

  @ApiProperty({
    required: false,
    type: () => KardexSeryUpdateManyWithoutWarehousesInput,
  })
  @ValidateNested()
  @Type(() => KardexSeryUpdateManyWithoutWarehousesInput)
  @IsOptional()
  @Field(() => KardexSeryUpdateManyWithoutWarehousesInput, {
    nullable: true,
  })
  kardexSeries?: KardexSeryUpdateManyWithoutWarehousesInput;

  @ApiProperty({
    required: false,
    enum: EnumWarehouseMesaControl,
  })
  @IsEnum(EnumWarehouseMesaControl)
  @IsOptional()
  @Field(() => EnumWarehouseMesaControl, {
    nullable: true,
  })
  mesa_control?: "A" | "I";

  @ApiProperty({
    required: false,
    enum: EnumWarehouseMetodoEnvioMensaje,
  })
  @IsEnum(EnumWarehouseMetodoEnvioMensaje)
  @IsOptional()
  @Field(() => EnumWarehouseMetodoEnvioMensaje, {
    nullable: true,
  })
  metodo_envio_mensaje?: "SMS" | "WHATSAPP";

  @ApiProperty({
    required: false,
    type: () => NubariumValidationUpdateManyWithoutWarehousesInput,
  })
  @ValidateNested()
  @Type(() => NubariumValidationUpdateManyWithoutWarehousesInput)
  @IsOptional()
  @Field(() => NubariumValidationUpdateManyWithoutWarehousesInput, {
    nullable: true,
  })
  nubariumValidations?: NubariumValidationUpdateManyWithoutWarehousesInput;

  @ApiProperty({
    required: false,
    type: () => OtherCompaniesPaymentUpdateManyWithoutWarehousesInput,
  })
  @ValidateNested()
  @Type(() => OtherCompaniesPaymentUpdateManyWithoutWarehousesInput)
  @IsOptional()
  @Field(() => OtherCompaniesPaymentUpdateManyWithoutWarehousesInput, {
    nullable: true,
  })
  otherCompaniesPayments?: OtherCompaniesPaymentUpdateManyWithoutWarehousesInput;

  @ApiProperty({
    required: false,
    type: () => PaymentInterestUpdateManyWithoutWarehousesInput,
  })
  @ValidateNested()
  @Type(() => PaymentInterestUpdateManyWithoutWarehousesInput)
  @IsOptional()
  @Field(() => PaymentInterestUpdateManyWithoutWarehousesInput, {
    nullable: true,
  })
  paymentInterests?: PaymentInterestUpdateManyWithoutWarehousesInput;

  @ApiProperty({
    required: false,
    type: () => PaymentUpdateManyWithoutWarehousesInput,
  })
  @ValidateNested()
  @Type(() => PaymentUpdateManyWithoutWarehousesInput)
  @IsOptional()
  @Field(() => PaymentUpdateManyWithoutWarehousesInput, {
    nullable: true,
  })
  payments?: PaymentUpdateManyWithoutWarehousesInput;

  @ApiProperty({
    required: false,
    type: () => PersonalLoanUpdateManyWithoutWarehousesInput,
  })
  @ValidateNested()
  @Type(() => PersonalLoanUpdateManyWithoutWarehousesInput)
  @IsOptional()
  @Field(() => PersonalLoanUpdateManyWithoutWarehousesInput, {
    nullable: true,
  })
  personalLoans?: PersonalLoanUpdateManyWithoutWarehousesInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  promocionTemporal?: string | null;

  @ApiProperty({
    required: false,
    type: () => ProtectionCertActivationUpdateManyWithoutWarehousesInput,
  })
  @ValidateNested()
  @Type(() => ProtectionCertActivationUpdateManyWithoutWarehousesInput)
  @IsOptional()
  @Field(() => ProtectionCertActivationUpdateManyWithoutWarehousesInput, {
    nullable: true,
  })
  protectionCertActivations?: ProtectionCertActivationUpdateManyWithoutWarehousesInput;

  @ApiProperty({
    required: false,
    type: () => ProtectionCertUpdateManyWithoutWarehousesInput,
  })
  @ValidateNested()
  @Type(() => ProtectionCertUpdateManyWithoutWarehousesInput)
  @IsOptional()
  @Field(() => ProtectionCertUpdateManyWithoutWarehousesInput, {
    nullable: true,
  })
  protectionCerts?: ProtectionCertUpdateManyWithoutWarehousesInput;

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  referenciaPago?: boolean;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  sendSmsUnlinkDevicesNuovo?: number | null;

  @ApiProperty({
    required: false,
    type: () => StockUpdateManyWithoutWarehousesInput,
  })
  @ValidateNested()
  @Type(() => StockUpdateManyWithoutWarehousesInput)
  @IsOptional()
  @Field(() => StockUpdateManyWithoutWarehousesInput, {
    nullable: true,
  })
  stock?: StockUpdateManyWithoutWarehousesInput;

  @ApiProperty({
    required: false,
    type: () => StockSeryUpdateManyWithoutWarehousesInput,
  })
  @ValidateNested()
  @Type(() => StockSeryUpdateManyWithoutWarehousesInput)
  @IsOptional()
  @Field(() => StockSeryUpdateManyWithoutWarehousesInput, {
    nullable: true,
  })
  stockSeries?: StockSeryUpdateManyWithoutWarehousesInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  telefonoValidacion?: string | null;

  @ApiProperty({
    required: false,
    enum: EnumWarehouseTipoSucursal,
  })
  @IsEnum(EnumWarehouseTipoSucursal)
  @IsOptional()
  @Field(() => EnumWarehouseTipoSucursal, {
    nullable: true,
  })
  tipo_sucursal?: "S" | "D";

  @ApiProperty({
    required: false,
    type: () => TransactionUpdateManyWithoutWarehousesInput,
  })
  @ValidateNested()
  @Type(() => TransactionUpdateManyWithoutWarehousesInput)
  @IsOptional()
  @Field(() => TransactionUpdateManyWithoutWarehousesInput, {
    nullable: true,
  })
  transactions?: TransactionUpdateManyWithoutWarehousesInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  ubicacion?: string | null;

  @ApiProperty({
    required: false,
    type: () => WarehouseGrantUpdateManyWithoutWarehousesInput,
  })
  @ValidateNested()
  @Type(() => WarehouseGrantUpdateManyWithoutWarehousesInput)
  @IsOptional()
  @Field(() => WarehouseGrantUpdateManyWithoutWarehousesInput, {
    nullable: true,
  })
  warehouseGrants?: WarehouseGrantUpdateManyWithoutWarehousesInput;

  @ApiProperty({
    required: false,
    type: () => WarehouseLoanAmountUpdateManyWithoutWarehousesInput,
  })
  @ValidateNested()
  @Type(() => WarehouseLoanAmountUpdateManyWithoutWarehousesInput)
  @IsOptional()
  @Field(() => WarehouseLoanAmountUpdateManyWithoutWarehousesInput, {
    nullable: true,
  })
  warehouseLoanAmounts?: WarehouseLoanAmountUpdateManyWithoutWarehousesInput;

  @ApiProperty({
    required: false,
    type: () => WarehouseMandatoryDocUpdateManyWithoutWarehousesInput,
  })
  @ValidateNested()
  @Type(() => WarehouseMandatoryDocUpdateManyWithoutWarehousesInput)
  @IsOptional()
  @Field(() => WarehouseMandatoryDocUpdateManyWithoutWarehousesInput, {
    nullable: true,
  })
  warehouseMandatoryDocs?: WarehouseMandatoryDocUpdateManyWithoutWarehousesInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  whouseName?: string;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  whouseNo?: number;
}

export { WarehouseUpdateInput as WarehouseUpdateInput };
