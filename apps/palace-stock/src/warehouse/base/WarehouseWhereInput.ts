/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { StringNullableFilter } from "../../util/StringNullableFilter";
import { Type } from "class-transformer";
import { IsOptional, ValidateNested, IsEnum } from "class-validator";
import { DecimalNullableFilter } from "../../util/DecimalNullableFilter";
import { IntNullableFilter } from "../../util/IntNullableFilter";
import { IntFilter } from "../../util/IntFilter";
import { BranchManagerListRelationFilter } from "../../branchManager/base/BranchManagerListRelationFilter";
import { BranchOfficeWhereUniqueInput } from "../../branchOffice/base/BranchOfficeWhereUniqueInput";
import { EnumWarehouseCargarSoloCapturasCamara } from "./EnumWarehouseCargarSoloCapturasCamara";
import { CashCountListRelationFilter } from "../../cashCount/base/CashCountListRelationFilter";
import { CashSaleListRelationFilter } from "../../cashSale/base/CashSaleListRelationFilter";
import { ConektaPaymentTransacListRelationFilter } from "../../conektaPaymentTransac/base/ConektaPaymentTransacListRelationFilter";
import { CustomerListRelationFilter } from "../../customer/base/CustomerListRelationFilter";
import { EnumWarehouseDeshabilitarValidarOtroFinanc } from "./EnumWarehouseDeshabilitarValidarOtroFinanc";
import { BooleanNullableFilter } from "../../util/BooleanNullableFilter";
import { EnumWarehouseEstatusAlmacen } from "./EnumWarehouseEstatusAlmacen";
import { EstimateListRelationFilter } from "../../estimate/base/EstimateListRelationFilter";
import { DateTimeFilter } from "../../util/DateTimeFilter";
import { FinancedSaleListRelationFilter } from "../../financedSale/base/FinancedSaleListRelationFilter";
import { EnumWarehouseHabilitarEnvioSms } from "./EnumWarehouseHabilitarEnvioSms";
import { EnumWarehouseHabilitarEnvioWhatsapp } from "./EnumWarehouseHabilitarEnvioWhatsapp";
import { DateTimeNullableFilter } from "../../util/DateTimeNullableFilter";
import { EnumWarehouseImpresionComprobantesPago } from "./EnumWarehouseImpresionComprobantesPago";
import { KardexListRelationFilter } from "../../kardex/base/KardexListRelationFilter";
import { KardexSeryListRelationFilter } from "../../kardexSery/base/KardexSeryListRelationFilter";
import { EnumWarehouseMesaControl } from "./EnumWarehouseMesaControl";
import { EnumWarehouseMetodoEnvioMensaje } from "./EnumWarehouseMetodoEnvioMensaje";
import { NubariumValidationListRelationFilter } from "../../nubariumValidation/base/NubariumValidationListRelationFilter";
import { OtherCompaniesPaymentListRelationFilter } from "../../otherCompaniesPayment/base/OtherCompaniesPaymentListRelationFilter";
import { PaymentInterestListRelationFilter } from "../../paymentInterest/base/PaymentInterestListRelationFilter";
import { PaymentListRelationFilter } from "../../payment/base/PaymentListRelationFilter";
import { PersonalLoanListRelationFilter } from "../../personalLoan/base/PersonalLoanListRelationFilter";
import { ProtectionCertActivationListRelationFilter } from "../../protectionCertActivation/base/ProtectionCertActivationListRelationFilter";
import { ProtectionCertListRelationFilter } from "../../protectionCert/base/ProtectionCertListRelationFilter";
import { BooleanFilter } from "../../util/BooleanFilter";
import { StockListRelationFilter } from "../../stock/base/StockListRelationFilter";
import { StockSeryListRelationFilter } from "../../stockSery/base/StockSeryListRelationFilter";
import { EnumWarehouseTipoSucursal } from "./EnumWarehouseTipoSucursal";
import { TransactionListRelationFilter } from "../../transaction/base/TransactionListRelationFilter";
import { WarehouseGrantListRelationFilter } from "../../warehouseGrant/base/WarehouseGrantListRelationFilter";
import { WarehouseLoanAmountListRelationFilter } from "../../warehouseLoanAmount/base/WarehouseLoanAmountListRelationFilter";
import { WarehouseMandatoryDocListRelationFilter } from "../../warehouseMandatoryDoc/base/WarehouseMandatoryDocListRelationFilter";
import { StringFilter } from "../../util/StringFilter";

@InputType()
class WarehouseWhereInput {
  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  ajusteDesctoFinanc?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: DecimalNullableFilter,
  })
  @Type(() => DecimalNullableFilter)
  @IsOptional()
  @Field(() => DecimalNullableFilter, {
    nullable: true,
  })
  ajusteMontoFijoEnganche?: DecimalNullableFilter;

  @ApiProperty({
    required: false,
    type: IntNullableFilter,
  })
  @Type(() => IntNullableFilter)
  @IsOptional()
  @Field(() => IntNullableFilter, {
    nullable: true,
  })
  autorizarIneErroneaNubarium?: IntNullableFilter;

  @ApiProperty({
    required: false,
    type: IntNullableFilter,
  })
  @Type(() => IntNullableFilter)
  @IsOptional()
  @Field(() => IntNullableFilter, {
    nullable: true,
  })
  autorizarNombresSinCoincidencia?: IntNullableFilter;

  @ApiProperty({
    required: false,
    type: IntNullableFilter,
  })
  @Type(() => IntNullableFilter)
  @IsOptional()
  @Field(() => IntNullableFilter, {
    nullable: true,
  })
  autorizarSelfieSinCoincidencia?: IntNullableFilter;

  @ApiProperty({
    required: false,
    type: IntFilter,
  })
  @Type(() => IntFilter)
  @IsOptional()
  @Field(() => IntFilter, {
    nullable: true,
  })
  bloqueoVentaComputadora?: IntFilter;

  @ApiProperty({
    required: false,
    type: () => BranchManagerListRelationFilter,
  })
  @ValidateNested()
  @Type(() => BranchManagerListRelationFilter)
  @IsOptional()
  @Field(() => BranchManagerListRelationFilter, {
    nullable: true,
  })
  branchManagers?: BranchManagerListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => BranchOfficeWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => BranchOfficeWhereUniqueInput)
  @IsOptional()
  @Field(() => BranchOfficeWhereUniqueInput, {
    nullable: true,
  })
  branchOffices?: BranchOfficeWhereUniqueInput;

  @ApiProperty({
    required: false,
    enum: EnumWarehouseCargarSoloCapturasCamara,
  })
  @IsEnum(EnumWarehouseCargarSoloCapturasCamara)
  @IsOptional()
  @Field(() => EnumWarehouseCargarSoloCapturasCamara, {
    nullable: true,
  })
  cargar_solo_capturas_camara?: "A" | "I";

  @ApiProperty({
    required: false,
    type: () => CashCountListRelationFilter,
  })
  @ValidateNested()
  @Type(() => CashCountListRelationFilter)
  @IsOptional()
  @Field(() => CashCountListRelationFilter, {
    nullable: true,
  })
  cashCounts?: CashCountListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => CashSaleListRelationFilter,
  })
  @ValidateNested()
  @Type(() => CashSaleListRelationFilter)
  @IsOptional()
  @Field(() => CashSaleListRelationFilter, {
    nullable: true,
  })
  cashSales?: CashSaleListRelationFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  catalogoCodigoPostal?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: () => ConektaPaymentTransacListRelationFilter,
  })
  @ValidateNested()
  @Type(() => ConektaPaymentTransacListRelationFilter)
  @IsOptional()
  @Field(() => ConektaPaymentTransacListRelationFilter, {
    nullable: true,
  })
  conektaPaymentTransacs?: ConektaPaymentTransacListRelationFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  confSaltarValidacionesPrestamosPersonales?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  contratoAlmacen?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  contratoAlmacenPdf?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: IntFilter,
  })
  @Type(() => IntFilter)
  @IsOptional()
  @Field(() => IntFilter, {
    nullable: true,
  })
  createdUserId?: IntFilter;

  @ApiProperty({
    required: false,
    type: () => CustomerListRelationFilter,
  })
  @ValidateNested()
  @Type(() => CustomerListRelationFilter)
  @IsOptional()
  @Field(() => CustomerListRelationFilter, {
    nullable: true,
  })
  customers?: CustomerListRelationFilter;

  @ApiProperty({
    required: false,
    type: IntFilter,
  })
  @Type(() => IntFilter)
  @IsOptional()
  @Field(() => IntFilter, {
    nullable: true,
  })
  desctoPagoOportuno?: IntFilter;

  @ApiProperty({
    required: false,
    type: IntFilter,
  })
  @Type(() => IntFilter)
  @IsOptional()
  @Field(() => IntFilter, {
    nullable: true,
  })
  desctoPagoOportunoPrestamos?: IntFilter;

  @ApiProperty({
    required: false,
    type: IntNullableFilter,
  })
  @Type(() => IntNullableFilter)
  @IsOptional()
  @Field(() => IntNullableFilter, {
    nullable: true,
  })
  descuentoEspecial?: IntNullableFilter;

  @ApiProperty({
    required: false,
    enum: EnumWarehouseDeshabilitarValidarOtroFinanc,
  })
  @IsEnum(EnumWarehouseDeshabilitarValidarOtroFinanc)
  @IsOptional()
  @Field(() => EnumWarehouseDeshabilitarValidarOtroFinanc, {
    nullable: true,
  })
  deshabilitar_validar_otro_financ?: "A" | "I";

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  domicilioFiscal?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: BooleanNullableFilter,
  })
  @Type(() => BooleanNullableFilter)
  @IsOptional()
  @Field(() => BooleanNullableFilter, {
    nullable: true,
  })
  dontLockDevices?: BooleanNullableFilter;

  @ApiProperty({
    required: false,
    enum: EnumWarehouseEstatusAlmacen,
  })
  @IsEnum(EnumWarehouseEstatusAlmacen)
  @IsOptional()
  @Field(() => EnumWarehouseEstatusAlmacen, {
    nullable: true,
  })
  estatus_almacen?: "A" | "I";

  @ApiProperty({
    required: false,
    type: () => EstimateListRelationFilter,
  })
  @ValidateNested()
  @Type(() => EstimateListRelationFilter)
  @IsOptional()
  @Field(() => EstimateListRelationFilter, {
    nullable: true,
  })
  estimates?: EstimateListRelationFilter;

  @ApiProperty({
    required: false,
    type: DateTimeFilter,
  })
  @Type(() => DateTimeFilter)
  @IsOptional()
  @Field(() => DateTimeFilter, {
    nullable: true,
  })
  fechaRegistro?: DateTimeFilter;

  @ApiProperty({
    required: false,
    type: () => FinancedSaleListRelationFilter,
  })
  @ValidateNested()
  @Type(() => FinancedSaleListRelationFilter)
  @IsOptional()
  @Field(() => FinancedSaleListRelationFilter, {
    nullable: true,
  })
  financedSales?: FinancedSaleListRelationFilter;

  @ApiProperty({
    required: false,
    type: IntNullableFilter,
  })
  @Type(() => IntNullableFilter)
  @IsOptional()
  @Field(() => IntNullableFilter, {
    nullable: true,
  })
  forceAdvancePayments?: IntNullableFilter;

  @ApiProperty({
    required: false,
    type: IntNullableFilter,
  })
  @Type(() => IntNullableFilter)
  @IsOptional()
  @Field(() => IntNullableFilter, {
    nullable: true,
  })
  habilitarBloqueoClienteCp?: IntNullableFilter;

  @ApiProperty({
    required: false,
    enum: EnumWarehouseHabilitarEnvioSms,
  })
  @IsEnum(EnumWarehouseHabilitarEnvioSms)
  @IsOptional()
  @Field(() => EnumWarehouseHabilitarEnvioSms, {
    nullable: true,
  })
  habilitar_envio_sms?: "A" | "I";

  @ApiProperty({
    required: false,
    enum: EnumWarehouseHabilitarEnvioWhatsapp,
  })
  @IsEnum(EnumWarehouseHabilitarEnvioWhatsapp)
  @IsOptional()
  @Field(() => EnumWarehouseHabilitarEnvioWhatsapp, {
    nullable: true,
  })
  habilitar_envio_whatsapp?: "A" | "I";

  @ApiProperty({
    required: false,
    type: IntNullableFilter,
  })
  @Type(() => IntNullableFilter)
  @IsOptional()
  @Field(() => IntNullableFilter, {
    nullable: true,
  })
  habilitarPrestamoEquipos?: IntNullableFilter;

  @ApiProperty({
    required: false,
    type: DateTimeNullableFilter,
  })
  @Type(() => DateTimeNullableFilter)
  @IsOptional()
  @Field(() => DateTimeNullableFilter, {
    nullable: true,
  })
  horaInicioPagos?: DateTimeNullableFilter;

  @ApiProperty({
    required: false,
    type: DateTimeNullableFilter,
  })
  @Type(() => DateTimeNullableFilter)
  @IsOptional()
  @Field(() => DateTimeNullableFilter, {
    nullable: true,
  })
  horaLimitePagos?: DateTimeNullableFilter;

  @ApiProperty({
    required: false,
    type: IntFilter,
  })
  @Type(() => IntFilter)
  @IsOptional()
  @Field(() => IntFilter, {
    nullable: true,
  })
  id?: IntFilter;

  @ApiProperty({
    required: false,
    enum: EnumWarehouseImpresionComprobantesPago,
  })
  @IsEnum(EnumWarehouseImpresionComprobantesPago)
  @IsOptional()
  @Field(() => EnumWarehouseImpresionComprobantesPago, {
    nullable: true,
  })
  impresion_comprobantes_pago?: "IC" | "IT";

  @ApiProperty({
    required: false,
    type: IntNullableFilter,
  })
  @Type(() => IntNullableFilter)
  @IsOptional()
  @Field(() => IntNullableFilter, {
    nullable: true,
  })
  incluirEngancheCorte?: IntNullableFilter;

  @ApiProperty({
    required: false,
    type: () => KardexListRelationFilter,
  })
  @ValidateNested()
  @Type(() => KardexListRelationFilter)
  @IsOptional()
  @Field(() => KardexListRelationFilter, {
    nullable: true,
  })
  kardex?: KardexListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => KardexSeryListRelationFilter,
  })
  @ValidateNested()
  @Type(() => KardexSeryListRelationFilter)
  @IsOptional()
  @Field(() => KardexSeryListRelationFilter, {
    nullable: true,
  })
  kardexSeries?: KardexSeryListRelationFilter;

  @ApiProperty({
    required: false,
    enum: EnumWarehouseMesaControl,
  })
  @IsEnum(EnumWarehouseMesaControl)
  @IsOptional()
  @Field(() => EnumWarehouseMesaControl, {
    nullable: true,
  })
  mesa_control?: "A" | "I";

  @ApiProperty({
    required: false,
    enum: EnumWarehouseMetodoEnvioMensaje,
  })
  @IsEnum(EnumWarehouseMetodoEnvioMensaje)
  @IsOptional()
  @Field(() => EnumWarehouseMetodoEnvioMensaje, {
    nullable: true,
  })
  metodo_envio_mensaje?: "SMS" | "WHATSAPP";

  @ApiProperty({
    required: false,
    type: () => NubariumValidationListRelationFilter,
  })
  @ValidateNested()
  @Type(() => NubariumValidationListRelationFilter)
  @IsOptional()
  @Field(() => NubariumValidationListRelationFilter, {
    nullable: true,
  })
  nubariumValidations?: NubariumValidationListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => OtherCompaniesPaymentListRelationFilter,
  })
  @ValidateNested()
  @Type(() => OtherCompaniesPaymentListRelationFilter)
  @IsOptional()
  @Field(() => OtherCompaniesPaymentListRelationFilter, {
    nullable: true,
  })
  otherCompaniesPayments?: OtherCompaniesPaymentListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => PaymentInterestListRelationFilter,
  })
  @ValidateNested()
  @Type(() => PaymentInterestListRelationFilter)
  @IsOptional()
  @Field(() => PaymentInterestListRelationFilter, {
    nullable: true,
  })
  paymentInterests?: PaymentInterestListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => PaymentListRelationFilter,
  })
  @ValidateNested()
  @Type(() => PaymentListRelationFilter)
  @IsOptional()
  @Field(() => PaymentListRelationFilter, {
    nullable: true,
  })
  payments?: PaymentListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => PersonalLoanListRelationFilter,
  })
  @ValidateNested()
  @Type(() => PersonalLoanListRelationFilter)
  @IsOptional()
  @Field(() => PersonalLoanListRelationFilter, {
    nullable: true,
  })
  personalLoans?: PersonalLoanListRelationFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  promocionTemporal?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: () => ProtectionCertActivationListRelationFilter,
  })
  @ValidateNested()
  @Type(() => ProtectionCertActivationListRelationFilter)
  @IsOptional()
  @Field(() => ProtectionCertActivationListRelationFilter, {
    nullable: true,
  })
  protectionCertActivations?: ProtectionCertActivationListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => ProtectionCertListRelationFilter,
  })
  @ValidateNested()
  @Type(() => ProtectionCertListRelationFilter)
  @IsOptional()
  @Field(() => ProtectionCertListRelationFilter, {
    nullable: true,
  })
  protectionCerts?: ProtectionCertListRelationFilter;

  @ApiProperty({
    required: false,
    type: BooleanFilter,
  })
  @Type(() => BooleanFilter)
  @IsOptional()
  @Field(() => BooleanFilter, {
    nullable: true,
  })
  referenciaPago?: BooleanFilter;

  @ApiProperty({
    required: false,
    type: IntNullableFilter,
  })
  @Type(() => IntNullableFilter)
  @IsOptional()
  @Field(() => IntNullableFilter, {
    nullable: true,
  })
  sendSmsUnlinkDevicesNuovo?: IntNullableFilter;

  @ApiProperty({
    required: false,
    type: () => StockListRelationFilter,
  })
  @ValidateNested()
  @Type(() => StockListRelationFilter)
  @IsOptional()
  @Field(() => StockListRelationFilter, {
    nullable: true,
  })
  stock?: StockListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => StockSeryListRelationFilter,
  })
  @ValidateNested()
  @Type(() => StockSeryListRelationFilter)
  @IsOptional()
  @Field(() => StockSeryListRelationFilter, {
    nullable: true,
  })
  stockSeries?: StockSeryListRelationFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  telefonoValidacion?: StringNullableFilter;

  @ApiProperty({
    required: false,
    enum: EnumWarehouseTipoSucursal,
  })
  @IsEnum(EnumWarehouseTipoSucursal)
  @IsOptional()
  @Field(() => EnumWarehouseTipoSucursal, {
    nullable: true,
  })
  tipo_sucursal?: "S" | "D";

  @ApiProperty({
    required: false,
    type: () => TransactionListRelationFilter,
  })
  @ValidateNested()
  @Type(() => TransactionListRelationFilter)
  @IsOptional()
  @Field(() => TransactionListRelationFilter, {
    nullable: true,
  })
  transactions?: TransactionListRelationFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  ubicacion?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: () => WarehouseGrantListRelationFilter,
  })
  @ValidateNested()
  @Type(() => WarehouseGrantListRelationFilter)
  @IsOptional()
  @Field(() => WarehouseGrantListRelationFilter, {
    nullable: true,
  })
  warehouseGrants?: WarehouseGrantListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => WarehouseLoanAmountListRelationFilter,
  })
  @ValidateNested()
  @Type(() => WarehouseLoanAmountListRelationFilter)
  @IsOptional()
  @Field(() => WarehouseLoanAmountListRelationFilter, {
    nullable: true,
  })
  warehouseLoanAmounts?: WarehouseLoanAmountListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => WarehouseMandatoryDocListRelationFilter,
  })
  @ValidateNested()
  @Type(() => WarehouseMandatoryDocListRelationFilter)
  @IsOptional()
  @Field(() => WarehouseMandatoryDocListRelationFilter, {
    nullable: true,
  })
  warehouseMandatoryDocs?: WarehouseMandatoryDocListRelationFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  whouseName?: StringFilter;

  @ApiProperty({
    required: false,
    type: IntFilter,
  })
  @Type(() => IntFilter)
  @IsOptional()
  @Field(() => IntFilter, {
    nullable: true,
  })
  whouseNo?: IntFilter;
}

export { WarehouseWhereInput as WarehouseWhereInput };
