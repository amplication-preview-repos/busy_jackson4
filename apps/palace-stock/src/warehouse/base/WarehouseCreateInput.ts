/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field, Float } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";

import {
  IsString,
  IsOptional,
  IsNumber,
  IsInt,
  ValidateNested,
  IsEnum,
  IsBoolean,
  IsDate,
} from "class-validator";

import { Decimal } from "decimal.js";
import { BranchManagerCreateNestedManyWithoutWarehousesInput } from "./BranchManagerCreateNestedManyWithoutWarehousesInput";
import { Type } from "class-transformer";
import { BranchOfficeWhereUniqueInput } from "../../branchOffice/base/BranchOfficeWhereUniqueInput";
import { EnumWarehouseCargarSoloCapturasCamara } from "./EnumWarehouseCargarSoloCapturasCamara";
import { CashCountCreateNestedManyWithoutWarehousesInput } from "./CashCountCreateNestedManyWithoutWarehousesInput";
import { CashSaleCreateNestedManyWithoutWarehousesInput } from "./CashSaleCreateNestedManyWithoutWarehousesInput";
import { ConektaPaymentTransacCreateNestedManyWithoutWarehousesInput } from "./ConektaPaymentTransacCreateNestedManyWithoutWarehousesInput";
import { CustomerCreateNestedManyWithoutWarehousesInput } from "./CustomerCreateNestedManyWithoutWarehousesInput";
import { EnumWarehouseDeshabilitarValidarOtroFinanc } from "./EnumWarehouseDeshabilitarValidarOtroFinanc";
import { EnumWarehouseEstatusAlmacen } from "./EnumWarehouseEstatusAlmacen";
import { EstimateCreateNestedManyWithoutWarehousesInput } from "./EstimateCreateNestedManyWithoutWarehousesInput";
import { FinancedSaleCreateNestedManyWithoutWarehousesInput } from "./FinancedSaleCreateNestedManyWithoutWarehousesInput";
import { EnumWarehouseHabilitarEnvioSms } from "./EnumWarehouseHabilitarEnvioSms";
import { EnumWarehouseHabilitarEnvioWhatsapp } from "./EnumWarehouseHabilitarEnvioWhatsapp";
import { EnumWarehouseImpresionComprobantesPago } from "./EnumWarehouseImpresionComprobantesPago";
import { KardexCreateNestedManyWithoutWarehousesInput } from "./KardexCreateNestedManyWithoutWarehousesInput";
import { KardexSeryCreateNestedManyWithoutWarehousesInput } from "./KardexSeryCreateNestedManyWithoutWarehousesInput";
import { EnumWarehouseMesaControl } from "./EnumWarehouseMesaControl";
import { EnumWarehouseMetodoEnvioMensaje } from "./EnumWarehouseMetodoEnvioMensaje";
import { NubariumValidationCreateNestedManyWithoutWarehousesInput } from "./NubariumValidationCreateNestedManyWithoutWarehousesInput";
import { OtherCompaniesPaymentCreateNestedManyWithoutWarehousesInput } from "./OtherCompaniesPaymentCreateNestedManyWithoutWarehousesInput";
import { PaymentInterestCreateNestedManyWithoutWarehousesInput } from "./PaymentInterestCreateNestedManyWithoutWarehousesInput";
import { PaymentCreateNestedManyWithoutWarehousesInput } from "./PaymentCreateNestedManyWithoutWarehousesInput";
import { PersonalLoanCreateNestedManyWithoutWarehousesInput } from "./PersonalLoanCreateNestedManyWithoutWarehousesInput";
import { ProtectionCertActivationCreateNestedManyWithoutWarehousesInput } from "./ProtectionCertActivationCreateNestedManyWithoutWarehousesInput";
import { ProtectionCertCreateNestedManyWithoutWarehousesInput } from "./ProtectionCertCreateNestedManyWithoutWarehousesInput";
import { StockCreateNestedManyWithoutWarehousesInput } from "./StockCreateNestedManyWithoutWarehousesInput";
import { StockSeryCreateNestedManyWithoutWarehousesInput } from "./StockSeryCreateNestedManyWithoutWarehousesInput";
import { EnumWarehouseTipoSucursal } from "./EnumWarehouseTipoSucursal";
import { TransactionCreateNestedManyWithoutWarehousesInput } from "./TransactionCreateNestedManyWithoutWarehousesInput";
import { WarehouseGrantCreateNestedManyWithoutWarehousesInput } from "./WarehouseGrantCreateNestedManyWithoutWarehousesInput";
import { WarehouseLoanAmountCreateNestedManyWithoutWarehousesInput } from "./WarehouseLoanAmountCreateNestedManyWithoutWarehousesInput";
import { WarehouseMandatoryDocCreateNestedManyWithoutWarehousesInput } from "./WarehouseMandatoryDocCreateNestedManyWithoutWarehousesInput";

@InputType()
class WarehouseCreateInput {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  ajusteDesctoFinanc?: string | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @IsOptional()
  @Field(() => Float, {
    nullable: true,
  })
  ajusteMontoFijoEnganche?: Decimal | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  autorizarIneErroneaNubarium?: number | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  autorizarNombresSinCoincidencia?: number | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  autorizarSelfieSinCoincidencia?: number | null;

  @ApiProperty({
    required: true,
    type: Number,
  })
  @IsInt()
  @Field(() => Number)
  bloqueoVentaComputadora!: number;

  @ApiProperty({
    required: false,
    type: () => BranchManagerCreateNestedManyWithoutWarehousesInput,
  })
  @ValidateNested()
  @Type(() => BranchManagerCreateNestedManyWithoutWarehousesInput)
  @IsOptional()
  @Field(() => BranchManagerCreateNestedManyWithoutWarehousesInput, {
    nullable: true,
  })
  branchManagers?: BranchManagerCreateNestedManyWithoutWarehousesInput;

  @ApiProperty({
    required: true,
    type: () => BranchOfficeWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => BranchOfficeWhereUniqueInput)
  @Field(() => BranchOfficeWhereUniqueInput)
  branchOffices!: BranchOfficeWhereUniqueInput;

  @ApiProperty({
    required: true,
    enum: EnumWarehouseCargarSoloCapturasCamara,
  })
  @IsEnum(EnumWarehouseCargarSoloCapturasCamara)
  @Field(() => EnumWarehouseCargarSoloCapturasCamara)
  cargar_solo_capturas_camara!: "A" | "I";

  @ApiProperty({
    required: false,
    type: () => CashCountCreateNestedManyWithoutWarehousesInput,
  })
  @ValidateNested()
  @Type(() => CashCountCreateNestedManyWithoutWarehousesInput)
  @IsOptional()
  @Field(() => CashCountCreateNestedManyWithoutWarehousesInput, {
    nullable: true,
  })
  cashCounts?: CashCountCreateNestedManyWithoutWarehousesInput;

  @ApiProperty({
    required: false,
    type: () => CashSaleCreateNestedManyWithoutWarehousesInput,
  })
  @ValidateNested()
  @Type(() => CashSaleCreateNestedManyWithoutWarehousesInput)
  @IsOptional()
  @Field(() => CashSaleCreateNestedManyWithoutWarehousesInput, {
    nullable: true,
  })
  cashSales?: CashSaleCreateNestedManyWithoutWarehousesInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  catalogoCodigoPostal?: string | null;

  @ApiProperty({
    required: false,
    type: () => ConektaPaymentTransacCreateNestedManyWithoutWarehousesInput,
  })
  @ValidateNested()
  @Type(() => ConektaPaymentTransacCreateNestedManyWithoutWarehousesInput)
  @IsOptional()
  @Field(() => ConektaPaymentTransacCreateNestedManyWithoutWarehousesInput, {
    nullable: true,
  })
  conektaPaymentTransacs?: ConektaPaymentTransacCreateNestedManyWithoutWarehousesInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  confSaltarValidacionesPrestamosPersonales?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  contratoAlmacen?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  contratoAlmacenPdf?: string | null;

  @ApiProperty({
    required: true,
    type: Number,
  })
  @IsInt()
  @Field(() => Number)
  createdUserId!: number;

  @ApiProperty({
    required: false,
    type: () => CustomerCreateNestedManyWithoutWarehousesInput,
  })
  @ValidateNested()
  @Type(() => CustomerCreateNestedManyWithoutWarehousesInput)
  @IsOptional()
  @Field(() => CustomerCreateNestedManyWithoutWarehousesInput, {
    nullable: true,
  })
  customers?: CustomerCreateNestedManyWithoutWarehousesInput;

  @ApiProperty({
    required: true,
    type: Number,
  })
  @IsInt()
  @Field(() => Number)
  desctoPagoOportuno!: number;

  @ApiProperty({
    required: true,
    type: Number,
  })
  @IsInt()
  @Field(() => Number)
  desctoPagoOportunoPrestamos!: number;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  descuentoEspecial?: number | null;

  @ApiProperty({
    required: false,
    enum: EnumWarehouseDeshabilitarValidarOtroFinanc,
  })
  @IsEnum(EnumWarehouseDeshabilitarValidarOtroFinanc)
  @IsOptional()
  @Field(() => EnumWarehouseDeshabilitarValidarOtroFinanc, {
    nullable: true,
  })
  deshabilitar_validar_otro_financ?: "A" | "I" | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  domicilioFiscal?: string | null;

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  dontLockDevices?: boolean | null;

  @ApiProperty({
    required: true,
    enum: EnumWarehouseEstatusAlmacen,
  })
  @IsEnum(EnumWarehouseEstatusAlmacen)
  @Field(() => EnumWarehouseEstatusAlmacen)
  estatus_almacen!: "A" | "I";

  @ApiProperty({
    required: false,
    type: () => EstimateCreateNestedManyWithoutWarehousesInput,
  })
  @ValidateNested()
  @Type(() => EstimateCreateNestedManyWithoutWarehousesInput)
  @IsOptional()
  @Field(() => EstimateCreateNestedManyWithoutWarehousesInput, {
    nullable: true,
  })
  estimates?: EstimateCreateNestedManyWithoutWarehousesInput;

  @ApiProperty({
    required: false,
    type: () => FinancedSaleCreateNestedManyWithoutWarehousesInput,
  })
  @ValidateNested()
  @Type(() => FinancedSaleCreateNestedManyWithoutWarehousesInput)
  @IsOptional()
  @Field(() => FinancedSaleCreateNestedManyWithoutWarehousesInput, {
    nullable: true,
  })
  financedSales?: FinancedSaleCreateNestedManyWithoutWarehousesInput;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  forceAdvancePayments?: number | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  habilitarBloqueoClienteCp?: number | null;

  @ApiProperty({
    required: false,
    enum: EnumWarehouseHabilitarEnvioSms,
  })
  @IsEnum(EnumWarehouseHabilitarEnvioSms)
  @IsOptional()
  @Field(() => EnumWarehouseHabilitarEnvioSms, {
    nullable: true,
  })
  habilitar_envio_sms?: "A" | "I" | null;

  @ApiProperty({
    required: false,
    enum: EnumWarehouseHabilitarEnvioWhatsapp,
  })
  @IsEnum(EnumWarehouseHabilitarEnvioWhatsapp)
  @IsOptional()
  @Field(() => EnumWarehouseHabilitarEnvioWhatsapp, {
    nullable: true,
  })
  habilitar_envio_whatsapp?: "A" | "I" | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  habilitarPrestamoEquipos?: number | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  horaInicioPagos?: Date | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  horaLimitePagos?: Date | null;

  @ApiProperty({
    required: false,
    enum: EnumWarehouseImpresionComprobantesPago,
  })
  @IsEnum(EnumWarehouseImpresionComprobantesPago)
  @IsOptional()
  @Field(() => EnumWarehouseImpresionComprobantesPago, {
    nullable: true,
  })
  impresion_comprobantes_pago?: "IC" | "IT" | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  incluirEngancheCorte?: number | null;

  @ApiProperty({
    required: false,
    type: () => KardexCreateNestedManyWithoutWarehousesInput,
  })
  @ValidateNested()
  @Type(() => KardexCreateNestedManyWithoutWarehousesInput)
  @IsOptional()
  @Field(() => KardexCreateNestedManyWithoutWarehousesInput, {
    nullable: true,
  })
  kardex?: KardexCreateNestedManyWithoutWarehousesInput;

  @ApiProperty({
    required: false,
    type: () => KardexSeryCreateNestedManyWithoutWarehousesInput,
  })
  @ValidateNested()
  @Type(() => KardexSeryCreateNestedManyWithoutWarehousesInput)
  @IsOptional()
  @Field(() => KardexSeryCreateNestedManyWithoutWarehousesInput, {
    nullable: true,
  })
  kardexSeries?: KardexSeryCreateNestedManyWithoutWarehousesInput;

  @ApiProperty({
    required: true,
    enum: EnumWarehouseMesaControl,
  })
  @IsEnum(EnumWarehouseMesaControl)
  @Field(() => EnumWarehouseMesaControl)
  mesa_control!: "A" | "I";

  @ApiProperty({
    required: true,
    enum: EnumWarehouseMetodoEnvioMensaje,
  })
  @IsEnum(EnumWarehouseMetodoEnvioMensaje)
  @Field(() => EnumWarehouseMetodoEnvioMensaje)
  metodo_envio_mensaje!: "SMS" | "WHATSAPP";

  @ApiProperty({
    required: false,
    type: () => NubariumValidationCreateNestedManyWithoutWarehousesInput,
  })
  @ValidateNested()
  @Type(() => NubariumValidationCreateNestedManyWithoutWarehousesInput)
  @IsOptional()
  @Field(() => NubariumValidationCreateNestedManyWithoutWarehousesInput, {
    nullable: true,
  })
  nubariumValidations?: NubariumValidationCreateNestedManyWithoutWarehousesInput;

  @ApiProperty({
    required: false,
    type: () => OtherCompaniesPaymentCreateNestedManyWithoutWarehousesInput,
  })
  @ValidateNested()
  @Type(() => OtherCompaniesPaymentCreateNestedManyWithoutWarehousesInput)
  @IsOptional()
  @Field(() => OtherCompaniesPaymentCreateNestedManyWithoutWarehousesInput, {
    nullable: true,
  })
  otherCompaniesPayments?: OtherCompaniesPaymentCreateNestedManyWithoutWarehousesInput;

  @ApiProperty({
    required: false,
    type: () => PaymentInterestCreateNestedManyWithoutWarehousesInput,
  })
  @ValidateNested()
  @Type(() => PaymentInterestCreateNestedManyWithoutWarehousesInput)
  @IsOptional()
  @Field(() => PaymentInterestCreateNestedManyWithoutWarehousesInput, {
    nullable: true,
  })
  paymentInterests?: PaymentInterestCreateNestedManyWithoutWarehousesInput;

  @ApiProperty({
    required: false,
    type: () => PaymentCreateNestedManyWithoutWarehousesInput,
  })
  @ValidateNested()
  @Type(() => PaymentCreateNestedManyWithoutWarehousesInput)
  @IsOptional()
  @Field(() => PaymentCreateNestedManyWithoutWarehousesInput, {
    nullable: true,
  })
  payments?: PaymentCreateNestedManyWithoutWarehousesInput;

  @ApiProperty({
    required: false,
    type: () => PersonalLoanCreateNestedManyWithoutWarehousesInput,
  })
  @ValidateNested()
  @Type(() => PersonalLoanCreateNestedManyWithoutWarehousesInput)
  @IsOptional()
  @Field(() => PersonalLoanCreateNestedManyWithoutWarehousesInput, {
    nullable: true,
  })
  personalLoans?: PersonalLoanCreateNestedManyWithoutWarehousesInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  promocionTemporal?: string | null;

  @ApiProperty({
    required: false,
    type: () => ProtectionCertActivationCreateNestedManyWithoutWarehousesInput,
  })
  @ValidateNested()
  @Type(() => ProtectionCertActivationCreateNestedManyWithoutWarehousesInput)
  @IsOptional()
  @Field(() => ProtectionCertActivationCreateNestedManyWithoutWarehousesInput, {
    nullable: true,
  })
  protectionCertActivations?: ProtectionCertActivationCreateNestedManyWithoutWarehousesInput;

  @ApiProperty({
    required: false,
    type: () => ProtectionCertCreateNestedManyWithoutWarehousesInput,
  })
  @ValidateNested()
  @Type(() => ProtectionCertCreateNestedManyWithoutWarehousesInput)
  @IsOptional()
  @Field(() => ProtectionCertCreateNestedManyWithoutWarehousesInput, {
    nullable: true,
  })
  protectionCerts?: ProtectionCertCreateNestedManyWithoutWarehousesInput;

  @ApiProperty({
    required: true,
    type: Boolean,
  })
  @IsBoolean()
  @Field(() => Boolean)
  referenciaPago!: boolean;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  sendSmsUnlinkDevicesNuovo?: number | null;

  @ApiProperty({
    required: false,
    type: () => StockCreateNestedManyWithoutWarehousesInput,
  })
  @ValidateNested()
  @Type(() => StockCreateNestedManyWithoutWarehousesInput)
  @IsOptional()
  @Field(() => StockCreateNestedManyWithoutWarehousesInput, {
    nullable: true,
  })
  stock?: StockCreateNestedManyWithoutWarehousesInput;

  @ApiProperty({
    required: false,
    type: () => StockSeryCreateNestedManyWithoutWarehousesInput,
  })
  @ValidateNested()
  @Type(() => StockSeryCreateNestedManyWithoutWarehousesInput)
  @IsOptional()
  @Field(() => StockSeryCreateNestedManyWithoutWarehousesInput, {
    nullable: true,
  })
  stockSeries?: StockSeryCreateNestedManyWithoutWarehousesInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  telefonoValidacion?: string | null;

  @ApiProperty({
    required: true,
    enum: EnumWarehouseTipoSucursal,
  })
  @IsEnum(EnumWarehouseTipoSucursal)
  @Field(() => EnumWarehouseTipoSucursal)
  tipo_sucursal!: "S" | "D";

  @ApiProperty({
    required: false,
    type: () => TransactionCreateNestedManyWithoutWarehousesInput,
  })
  @ValidateNested()
  @Type(() => TransactionCreateNestedManyWithoutWarehousesInput)
  @IsOptional()
  @Field(() => TransactionCreateNestedManyWithoutWarehousesInput, {
    nullable: true,
  })
  transactions?: TransactionCreateNestedManyWithoutWarehousesInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  ubicacion?: string | null;

  @ApiProperty({
    required: false,
    type: () => WarehouseGrantCreateNestedManyWithoutWarehousesInput,
  })
  @ValidateNested()
  @Type(() => WarehouseGrantCreateNestedManyWithoutWarehousesInput)
  @IsOptional()
  @Field(() => WarehouseGrantCreateNestedManyWithoutWarehousesInput, {
    nullable: true,
  })
  warehouseGrants?: WarehouseGrantCreateNestedManyWithoutWarehousesInput;

  @ApiProperty({
    required: false,
    type: () => WarehouseLoanAmountCreateNestedManyWithoutWarehousesInput,
  })
  @ValidateNested()
  @Type(() => WarehouseLoanAmountCreateNestedManyWithoutWarehousesInput)
  @IsOptional()
  @Field(() => WarehouseLoanAmountCreateNestedManyWithoutWarehousesInput, {
    nullable: true,
  })
  warehouseLoanAmounts?: WarehouseLoanAmountCreateNestedManyWithoutWarehousesInput;

  @ApiProperty({
    required: false,
    type: () => WarehouseMandatoryDocCreateNestedManyWithoutWarehousesInput,
  })
  @ValidateNested()
  @Type(() => WarehouseMandatoryDocCreateNestedManyWithoutWarehousesInput)
  @IsOptional()
  @Field(() => WarehouseMandatoryDocCreateNestedManyWithoutWarehousesInput, {
    nullable: true,
  })
  warehouseMandatoryDocs?: WarehouseMandatoryDocCreateNestedManyWithoutWarehousesInput;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  whouseName!: string;

  @ApiProperty({
    required: true,
    type: Number,
  })
  @IsInt()
  @Field(() => Number)
  whouseNo!: number;
}

export { WarehouseCreateInput as WarehouseCreateInput };
