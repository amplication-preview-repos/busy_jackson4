/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsInt,
  IsDate,
  IsString,
  IsOptional,
  ValidateNested,
} from "class-validator";
import { Type } from "class-transformer";
import { FinancedSaleWhereUniqueInput } from "../../financedSale/base/FinancedSaleWhereUniqueInput";
import { OtherCompaniesPaymentCreateNestedManyWithoutStripePaymentTransacsInput } from "./OtherCompaniesPaymentCreateNestedManyWithoutStripePaymentTransacsInput";
import { PaymentCreateNestedManyWithoutStripePaymentTransacsInput } from "./PaymentCreateNestedManyWithoutStripePaymentTransacsInput";
import { RecurringPaymentCreateNestedManyWithoutStripePaymentTransacsInput } from "./RecurringPaymentCreateNestedManyWithoutStripePaymentTransacsInput";
import { StripeApiLogCreateNestedManyWithoutStripePaymentTransacsInput } from "./StripeApiLogCreateNestedManyWithoutStripePaymentTransacsInput";

@InputType()
class StripePaymentTransacCreateInput {
  @ApiProperty({
    required: true,
    type: Number,
  })
  @IsInt()
  @Field(() => Number)
  amount!: number;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  created!: Date;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  datosPago?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  eventStatus?: string | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  fechaRegistro?: Date | null;

  @ApiProperty({
    required: true,
    type: () => FinancedSaleWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => FinancedSaleWhereUniqueInput)
  @Field(() => FinancedSaleWhereUniqueInput)
  financedSales!: FinancedSaleWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  habilitarPagoRecurrente?: number | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  linkVoucher?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  metodoPago?: string | null;

  @ApiProperty({
    required: false,
    type: () =>
      OtherCompaniesPaymentCreateNestedManyWithoutStripePaymentTransacsInput,
  })
  @ValidateNested()
  @Type(
    () => OtherCompaniesPaymentCreateNestedManyWithoutStripePaymentTransacsInput
  )
  @IsOptional()
  @Field(
    () =>
      OtherCompaniesPaymentCreateNestedManyWithoutStripePaymentTransacsInput,
    {
      nullable: true,
    }
  )
  otherCompaniesPayments?: OtherCompaniesPaymentCreateNestedManyWithoutStripePaymentTransacsInput;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  paymentIntent!: string;

  @ApiProperty({
    required: false,
    type: () => PaymentCreateNestedManyWithoutStripePaymentTransacsInput,
  })
  @ValidateNested()
  @Type(() => PaymentCreateNestedManyWithoutStripePaymentTransacsInput)
  @IsOptional()
  @Field(() => PaymentCreateNestedManyWithoutStripePaymentTransacsInput, {
    nullable: true,
  })
  payments?: PaymentCreateNestedManyWithoutStripePaymentTransacsInput;

  @ApiProperty({
    required: false,
    type: () =>
      RecurringPaymentCreateNestedManyWithoutStripePaymentTransacsInput,
  })
  @ValidateNested()
  @Type(() => RecurringPaymentCreateNestedManyWithoutStripePaymentTransacsInput)
  @IsOptional()
  @Field(
    () => RecurringPaymentCreateNestedManyWithoutStripePaymentTransacsInput,
    {
      nullable: true,
    }
  )
  recurringPayments?: RecurringPaymentCreateNestedManyWithoutStripePaymentTransacsInput;

  @ApiProperty({
    required: false,
    type: () => StripeApiLogCreateNestedManyWithoutStripePaymentTransacsInput,
  })
  @ValidateNested()
  @Type(() => StripeApiLogCreateNestedManyWithoutStripePaymentTransacsInput)
  @IsOptional()
  @Field(() => StripeApiLogCreateNestedManyWithoutStripePaymentTransacsInput, {
    nullable: true,
  })
  stripeApiLog?: StripeApiLogCreateNestedManyWithoutStripePaymentTransacsInput;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  stripeClientSecret!: string;
}

export { StripePaymentTransacCreateInput as StripePaymentTransacCreateInput };
