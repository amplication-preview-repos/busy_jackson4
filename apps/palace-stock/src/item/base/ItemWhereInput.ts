/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { BillDetailListRelationFilter } from "../../billDetail/base/BillDetailListRelationFilter";
import { ValidateNested, IsOptional, IsEnum } from "class-validator";
import { Type } from "class-transformer";
import { CashSaleDetailListRelationFilter } from "../../cashSaleDetail/base/CashSaleDetailListRelationFilter";
import { CategoryWhereUniqueInput } from "../../category/base/CategoryWhereUniqueInput";
import { StringFilter } from "../../util/StringFilter";
import { IntNullableFilter } from "../../util/IntNullableFilter";
import { EnumItemEstatusArt } from "./EnumItemEstatusArt";
import { EstimateListRelationFilter } from "../../estimate/base/EstimateListRelationFilter";
import { DateTimeNullableFilter } from "../../util/DateTimeNullableFilter";
import { FinancedAccessoryListRelationFilter } from "../../financedAccessory/base/FinancedAccessoryListRelationFilter";
import { FinancedSaleListRelationFilter } from "../../financedSale/base/FinancedSaleListRelationFilter";
import { IntFilter } from "../../util/IntFilter";
import { StringNullableFilter } from "../../util/StringNullableFilter";
import { ItemPriceListRelationFilter } from "../../itemPrice/base/ItemPriceListRelationFilter";
import { KardexListRelationFilter } from "../../kardex/base/KardexListRelationFilter";
import { KardexSeryListRelationFilter } from "../../kardexSery/base/KardexSeryListRelationFilter";
import { LoanedDeviceListRelationFilter } from "../../loanedDevice/base/LoanedDeviceListRelationFilter";
import { MeasuringUnitWhereUniqueInput } from "../../measuringUnit/base/MeasuringUnitWhereUniqueInput";
import { EnumItemOfrecerPlanes } from "./EnumItemOfrecerPlanes";
import { ProtectionCertActivationListRelationFilter } from "../../protectionCertActivation/base/ProtectionCertActivationListRelationFilter";
import { StockListRelationFilter } from "../../stock/base/StockListRelationFilter";
import { StockSeryListRelationFilter } from "../../stockSery/base/StockSeryListRelationFilter";
import { EnumItemTipoArt } from "./EnumItemTipoArt";
import { EnumItemTipoInventario } from "./EnumItemTipoInventario";

@InputType()
class ItemWhereInput {
  @ApiProperty({
    required: false,
    type: () => BillDetailListRelationFilter,
  })
  @ValidateNested()
  @Type(() => BillDetailListRelationFilter)
  @IsOptional()
  @Field(() => BillDetailListRelationFilter, {
    nullable: true,
  })
  billDetails?: BillDetailListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => CashSaleDetailListRelationFilter,
  })
  @ValidateNested()
  @Type(() => CashSaleDetailListRelationFilter)
  @IsOptional()
  @Field(() => CashSaleDetailListRelationFilter, {
    nullable: true,
  })
  cashSaleDetails?: CashSaleDetailListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => CategoryWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => CategoryWhereUniqueInput)
  @IsOptional()
  @Field(() => CategoryWhereUniqueInput, {
    nullable: true,
  })
  categories?: CategoryWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  codigoArt?: StringFilter;

  @ApiProperty({
    required: false,
    type: IntNullableFilter,
  })
  @Type(() => IntNullableFilter)
  @IsOptional()
  @Field(() => IntNullableFilter, {
    nullable: true,
  })
  createdUserId?: IntNullableFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  descripcionArt?: StringFilter;

  @ApiProperty({
    required: false,
    enum: EnumItemEstatusArt,
  })
  @IsEnum(EnumItemEstatusArt)
  @IsOptional()
  @Field(() => EnumItemEstatusArt, {
    nullable: true,
  })
  estatus_art?: "A" | "I";

  @ApiProperty({
    required: false,
    type: () => EstimateListRelationFilter,
  })
  @ValidateNested()
  @Type(() => EstimateListRelationFilter)
  @IsOptional()
  @Field(() => EstimateListRelationFilter, {
    nullable: true,
  })
  estimates?: EstimateListRelationFilter;

  @ApiProperty({
    required: false,
    type: DateTimeNullableFilter,
  })
  @Type(() => DateTimeNullableFilter)
  @IsOptional()
  @Field(() => DateTimeNullableFilter, {
    nullable: true,
  })
  fechaModificado?: DateTimeNullableFilter;

  @ApiProperty({
    required: false,
    type: DateTimeNullableFilter,
  })
  @Type(() => DateTimeNullableFilter)
  @IsOptional()
  @Field(() => DateTimeNullableFilter, {
    nullable: true,
  })
  fechaRegistro?: DateTimeNullableFilter;

  @ApiProperty({
    required: false,
    type: () => FinancedAccessoryListRelationFilter,
  })
  @ValidateNested()
  @Type(() => FinancedAccessoryListRelationFilter)
  @IsOptional()
  @Field(() => FinancedAccessoryListRelationFilter, {
    nullable: true,
  })
  financedAccessories?: FinancedAccessoryListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => FinancedSaleListRelationFilter,
  })
  @ValidateNested()
  @Type(() => FinancedSaleListRelationFilter)
  @IsOptional()
  @Field(() => FinancedSaleListRelationFilter, {
    nullable: true,
  })
  financedSales?: FinancedSaleListRelationFilter;

  @ApiProperty({
    required: false,
    type: IntFilter,
  })
  @Type(() => IntFilter)
  @IsOptional()
  @Field(() => IntFilter, {
    nullable: true,
  })
  id?: IntFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  ignorarPlazos?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: () => ItemPriceListRelationFilter,
  })
  @ValidateNested()
  @Type(() => ItemPriceListRelationFilter)
  @IsOptional()
  @Field(() => ItemPriceListRelationFilter, {
    nullable: true,
  })
  itemPrices?: ItemPriceListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => KardexListRelationFilter,
  })
  @ValidateNested()
  @Type(() => KardexListRelationFilter)
  @IsOptional()
  @Field(() => KardexListRelationFilter, {
    nullable: true,
  })
  kardex?: KardexListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => KardexSeryListRelationFilter,
  })
  @ValidateNested()
  @Type(() => KardexSeryListRelationFilter)
  @IsOptional()
  @Field(() => KardexSeryListRelationFilter, {
    nullable: true,
  })
  kardexSeries?: KardexSeryListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => LoanedDeviceListRelationFilter,
  })
  @ValidateNested()
  @Type(() => LoanedDeviceListRelationFilter)
  @IsOptional()
  @Field(() => LoanedDeviceListRelationFilter, {
    nullable: true,
  })
  loanedDevices?: LoanedDeviceListRelationFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  marca?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: () => MeasuringUnitWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => MeasuringUnitWhereUniqueInput)
  @IsOptional()
  @Field(() => MeasuringUnitWhereUniqueInput, {
    nullable: true,
  })
  measuringUnits?: MeasuringUnitWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  modelo?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  nombreArchivo?: StringNullableFilter;

  @ApiProperty({
    required: false,
    enum: EnumItemOfrecerPlanes,
  })
  @IsEnum(EnumItemOfrecerPlanes)
  @IsOptional()
  @Field(() => EnumItemOfrecerPlanes, {
    nullable: true,
  })
  ofrecer_planes?: "I" | "A";

  @ApiProperty({
    required: false,
    type: () => ProtectionCertActivationListRelationFilter,
  })
  @ValidateNested()
  @Type(() => ProtectionCertActivationListRelationFilter)
  @IsOptional()
  @Field(() => ProtectionCertActivationListRelationFilter, {
    nullable: true,
  })
  protectionCertActivationsProtectionCertActivationsItemIdToitems?: ProtectionCertActivationListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => ProtectionCertActivationListRelationFilter,
  })
  @ValidateNested()
  @Type(() => ProtectionCertActivationListRelationFilter)
  @IsOptional()
  @Field(() => ProtectionCertActivationListRelationFilter, {
    nullable: true,
  })
  protectionCertActivationsProtectionCertActivationsReservedItemIdToitems?: ProtectionCertActivationListRelationFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  rutaArchivo?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: () => StockListRelationFilter,
  })
  @ValidateNested()
  @Type(() => StockListRelationFilter)
  @IsOptional()
  @Field(() => StockListRelationFilter, {
    nullable: true,
  })
  stock?: StockListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => StockSeryListRelationFilter,
  })
  @ValidateNested()
  @Type(() => StockSeryListRelationFilter)
  @IsOptional()
  @Field(() => StockSeryListRelationFilter, {
    nullable: true,
  })
  stockSeries?: StockSeryListRelationFilter;

  @ApiProperty({
    required: false,
    enum: EnumItemTipoArt,
  })
  @IsEnum(EnumItemTipoArt)
  @IsOptional()
  @Field(() => EnumItemTipoArt, {
    nullable: true,
  })
  tipo_art?: "P" | "S";

  @ApiProperty({
    required: false,
    enum: EnumItemTipoInventario,
  })
  @IsEnum(EnumItemTipoInventario)
  @IsOptional()
  @Field(() => EnumItemTipoInventario, {
    nullable: true,
  })
  tipo_inventario?: "T" | "S";

  @ApiProperty({
    required: false,
    type: IntNullableFilter,
  })
  @Type(() => IntNullableFilter)
  @IsOptional()
  @Field(() => IntNullableFilter, {
    nullable: true,
  })
  updatedUserId?: IntNullableFilter;
}

export { ItemWhereInput as ItemWhereInput };
