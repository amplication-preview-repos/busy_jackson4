/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { BillDetailCreateNestedManyWithoutItemsInput } from "./BillDetailCreateNestedManyWithoutItemsInput";
import {
  ValidateNested,
  IsOptional,
  IsString,
  IsInt,
  IsEnum,
  IsDate,
} from "class-validator";
import { Type } from "class-transformer";
import { CashSaleDetailCreateNestedManyWithoutItemsInput } from "./CashSaleDetailCreateNestedManyWithoutItemsInput";
import { CategoryWhereUniqueInput } from "../../category/base/CategoryWhereUniqueInput";
import { EnumItemEstatusArt } from "./EnumItemEstatusArt";
import { EstimateCreateNestedManyWithoutItemsInput } from "./EstimateCreateNestedManyWithoutItemsInput";
import { FinancedAccessoryCreateNestedManyWithoutItemsInput } from "./FinancedAccessoryCreateNestedManyWithoutItemsInput";
import { FinancedSaleCreateNestedManyWithoutItemsInput } from "./FinancedSaleCreateNestedManyWithoutItemsInput";
import { ItemPriceCreateNestedManyWithoutItemsInput } from "./ItemPriceCreateNestedManyWithoutItemsInput";
import { KardexCreateNestedManyWithoutItemsInput } from "./KardexCreateNestedManyWithoutItemsInput";
import { KardexSeryCreateNestedManyWithoutItemsInput } from "./KardexSeryCreateNestedManyWithoutItemsInput";
import { LoanedDeviceCreateNestedManyWithoutItemsInput } from "./LoanedDeviceCreateNestedManyWithoutItemsInput";
import { MeasuringUnitWhereUniqueInput } from "../../measuringUnit/base/MeasuringUnitWhereUniqueInput";
import { EnumItemOfrecerPlanes } from "./EnumItemOfrecerPlanes";
import { ProtectionCertActivationCreateNestedManyWithoutItemsInput } from "./ProtectionCertActivationCreateNestedManyWithoutItemsInput";
import { StockCreateNestedManyWithoutItemsInput } from "./StockCreateNestedManyWithoutItemsInput";
import { StockSeryCreateNestedManyWithoutItemsInput } from "./StockSeryCreateNestedManyWithoutItemsInput";
import { EnumItemTipoArt } from "./EnumItemTipoArt";
import { EnumItemTipoInventario } from "./EnumItemTipoInventario";

@InputType()
class ItemCreateInput {
  @ApiProperty({
    required: false,
    type: () => BillDetailCreateNestedManyWithoutItemsInput,
  })
  @ValidateNested()
  @Type(() => BillDetailCreateNestedManyWithoutItemsInput)
  @IsOptional()
  @Field(() => BillDetailCreateNestedManyWithoutItemsInput, {
    nullable: true,
  })
  billDetails?: BillDetailCreateNestedManyWithoutItemsInput;

  @ApiProperty({
    required: false,
    type: () => CashSaleDetailCreateNestedManyWithoutItemsInput,
  })
  @ValidateNested()
  @Type(() => CashSaleDetailCreateNestedManyWithoutItemsInput)
  @IsOptional()
  @Field(() => CashSaleDetailCreateNestedManyWithoutItemsInput, {
    nullable: true,
  })
  cashSaleDetails?: CashSaleDetailCreateNestedManyWithoutItemsInput;

  @ApiProperty({
    required: false,
    type: () => CategoryWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => CategoryWhereUniqueInput)
  @IsOptional()
  @Field(() => CategoryWhereUniqueInput, {
    nullable: true,
  })
  categories?: CategoryWhereUniqueInput | null;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  codigoArt!: string;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  createdUserId?: number | null;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  descripcionArt!: string;

  @ApiProperty({
    required: true,
    enum: EnumItemEstatusArt,
  })
  @IsEnum(EnumItemEstatusArt)
  @Field(() => EnumItemEstatusArt)
  estatus_art!: "A" | "I";

  @ApiProperty({
    required: false,
    type: () => EstimateCreateNestedManyWithoutItemsInput,
  })
  @ValidateNested()
  @Type(() => EstimateCreateNestedManyWithoutItemsInput)
  @IsOptional()
  @Field(() => EstimateCreateNestedManyWithoutItemsInput, {
    nullable: true,
  })
  estimates?: EstimateCreateNestedManyWithoutItemsInput;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  fechaModificado?: Date | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  fechaRegistro?: Date | null;

  @ApiProperty({
    required: false,
    type: () => FinancedAccessoryCreateNestedManyWithoutItemsInput,
  })
  @ValidateNested()
  @Type(() => FinancedAccessoryCreateNestedManyWithoutItemsInput)
  @IsOptional()
  @Field(() => FinancedAccessoryCreateNestedManyWithoutItemsInput, {
    nullable: true,
  })
  financedAccessories?: FinancedAccessoryCreateNestedManyWithoutItemsInput;

  @ApiProperty({
    required: false,
    type: () => FinancedSaleCreateNestedManyWithoutItemsInput,
  })
  @ValidateNested()
  @Type(() => FinancedSaleCreateNestedManyWithoutItemsInput)
  @IsOptional()
  @Field(() => FinancedSaleCreateNestedManyWithoutItemsInput, {
    nullable: true,
  })
  financedSales?: FinancedSaleCreateNestedManyWithoutItemsInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  ignorarPlazos?: string | null;

  @ApiProperty({
    required: false,
    type: () => ItemPriceCreateNestedManyWithoutItemsInput,
  })
  @ValidateNested()
  @Type(() => ItemPriceCreateNestedManyWithoutItemsInput)
  @IsOptional()
  @Field(() => ItemPriceCreateNestedManyWithoutItemsInput, {
    nullable: true,
  })
  itemPrices?: ItemPriceCreateNestedManyWithoutItemsInput;

  @ApiProperty({
    required: false,
    type: () => KardexCreateNestedManyWithoutItemsInput,
  })
  @ValidateNested()
  @Type(() => KardexCreateNestedManyWithoutItemsInput)
  @IsOptional()
  @Field(() => KardexCreateNestedManyWithoutItemsInput, {
    nullable: true,
  })
  kardex?: KardexCreateNestedManyWithoutItemsInput;

  @ApiProperty({
    required: false,
    type: () => KardexSeryCreateNestedManyWithoutItemsInput,
  })
  @ValidateNested()
  @Type(() => KardexSeryCreateNestedManyWithoutItemsInput)
  @IsOptional()
  @Field(() => KardexSeryCreateNestedManyWithoutItemsInput, {
    nullable: true,
  })
  kardexSeries?: KardexSeryCreateNestedManyWithoutItemsInput;

  @ApiProperty({
    required: false,
    type: () => LoanedDeviceCreateNestedManyWithoutItemsInput,
  })
  @ValidateNested()
  @Type(() => LoanedDeviceCreateNestedManyWithoutItemsInput)
  @IsOptional()
  @Field(() => LoanedDeviceCreateNestedManyWithoutItemsInput, {
    nullable: true,
  })
  loanedDevices?: LoanedDeviceCreateNestedManyWithoutItemsInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  marca?: string | null;

  @ApiProperty({
    required: false,
    type: () => MeasuringUnitWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => MeasuringUnitWhereUniqueInput)
  @IsOptional()
  @Field(() => MeasuringUnitWhereUniqueInput, {
    nullable: true,
  })
  measuringUnits?: MeasuringUnitWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  modelo?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  nombreArchivo?: string | null;

  @ApiProperty({
    required: true,
    enum: EnumItemOfrecerPlanes,
  })
  @IsEnum(EnumItemOfrecerPlanes)
  @Field(() => EnumItemOfrecerPlanes)
  ofrecer_planes!: "I" | "A";

  @ApiProperty({
    required: false,
    type: () => ProtectionCertActivationCreateNestedManyWithoutItemsInput,
  })
  @ValidateNested()
  @Type(() => ProtectionCertActivationCreateNestedManyWithoutItemsInput)
  @IsOptional()
  @Field(() => ProtectionCertActivationCreateNestedManyWithoutItemsInput, {
    nullable: true,
  })
  protectionCertActivationsProtectionCertActivationsItemIdToitems?: ProtectionCertActivationCreateNestedManyWithoutItemsInput;

  @ApiProperty({
    required: false,
    type: () => ProtectionCertActivationCreateNestedManyWithoutItemsInput,
  })
  @ValidateNested()
  @Type(() => ProtectionCertActivationCreateNestedManyWithoutItemsInput)
  @IsOptional()
  @Field(() => ProtectionCertActivationCreateNestedManyWithoutItemsInput, {
    nullable: true,
  })
  protectionCertActivationsProtectionCertActivationsReservedItemIdToitems?: ProtectionCertActivationCreateNestedManyWithoutItemsInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  rutaArchivo?: string | null;

  @ApiProperty({
    required: false,
    type: () => StockCreateNestedManyWithoutItemsInput,
  })
  @ValidateNested()
  @Type(() => StockCreateNestedManyWithoutItemsInput)
  @IsOptional()
  @Field(() => StockCreateNestedManyWithoutItemsInput, {
    nullable: true,
  })
  stock?: StockCreateNestedManyWithoutItemsInput;

  @ApiProperty({
    required: false,
    type: () => StockSeryCreateNestedManyWithoutItemsInput,
  })
  @ValidateNested()
  @Type(() => StockSeryCreateNestedManyWithoutItemsInput)
  @IsOptional()
  @Field(() => StockSeryCreateNestedManyWithoutItemsInput, {
    nullable: true,
  })
  stockSeries?: StockSeryCreateNestedManyWithoutItemsInput;

  @ApiProperty({
    required: true,
    enum: EnumItemTipoArt,
  })
  @IsEnum(EnumItemTipoArt)
  @Field(() => EnumItemTipoArt)
  tipo_art!: "P" | "S";

  @ApiProperty({
    required: true,
    enum: EnumItemTipoInventario,
  })
  @IsEnum(EnumItemTipoInventario)
  @Field(() => EnumItemTipoInventario)
  tipo_inventario!: "T" | "S";

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  updatedUserId?: number | null;
}

export { ItemCreateInput as ItemCreateInput };
