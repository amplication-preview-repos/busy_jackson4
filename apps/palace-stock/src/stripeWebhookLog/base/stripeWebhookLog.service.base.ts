/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  StripeWebhookLog as PrismaStripeWebhookLog,
} from "@prisma/client";

export class StripeWebhookLogServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.StripeWebhookLogCountArgs, "select">
  ): Promise<number> {
    return this.prisma.stripeWebhookLog.count(args);
  }

  async stripeWebhookLogs<T extends Prisma.StripeWebhookLogFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.StripeWebhookLogFindManyArgs>
  ): Promise<PrismaStripeWebhookLog[]> {
    return this.prisma.stripeWebhookLog.findMany<Prisma.StripeWebhookLogFindManyArgs>(
      args
    );
  }
  async stripeWebhookLog<T extends Prisma.StripeWebhookLogFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.StripeWebhookLogFindUniqueArgs>
  ): Promise<PrismaStripeWebhookLog | null> {
    return this.prisma.stripeWebhookLog.findUnique(args);
  }
  async createStripeWebhookLog<T extends Prisma.StripeWebhookLogCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.StripeWebhookLogCreateArgs>
  ): Promise<PrismaStripeWebhookLog> {
    return this.prisma.stripeWebhookLog.create<T>(args);
  }
  async updateStripeWebhookLog<T extends Prisma.StripeWebhookLogUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.StripeWebhookLogUpdateArgs>
  ): Promise<PrismaStripeWebhookLog> {
    return this.prisma.stripeWebhookLog.update<T>(args);
  }
  async deleteStripeWebhookLog<T extends Prisma.StripeWebhookLogDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.StripeWebhookLogDeleteArgs>
  ): Promise<PrismaStripeWebhookLog> {
    return this.prisma.stripeWebhookLog.delete(args);
  }
}
