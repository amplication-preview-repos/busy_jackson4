/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { ObjectType, Field, Float } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";

import {
  IsNumber,
  IsOptional,
  IsString,
  ValidateNested,
  IsBoolean,
  IsEnum,
  IsDate,
  IsInt,
} from "class-validator";

import { Decimal } from "decimal.js";
import { ConektaPaymentTransac } from "../../conektaPaymentTransac/base/ConektaPaymentTransac";
import { Type } from "class-transformer";
import { EnumOtherCompaniesPaymentEstatusPago } from "./EnumOtherCompaniesPaymentEstatusPago";
import { StripePaymentTransac } from "../../stripePaymentTransac/base/StripePaymentTransac";
import { EnumOtherCompaniesPaymentTipoPago } from "./EnumOtherCompaniesPaymentTipoPago";
import { Warehouse } from "../../warehouse/base/Warehouse";

@ObjectType()
class OtherCompaniesPayment {
  @ApiProperty({
    required: true,
    type: Number,
  })
  @IsNumber()
  @Field(() => Float)
  abonoExtra!: Decimal;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @IsOptional()
  @Field(() => Float, {
    nullable: true,
  })
  cambioDevuelto!: Decimal | null;

  @ApiProperty({
    required: true,
    type: Number,
  })
  @IsNumber()
  @Field(() => Float)
  cantidadRecibida!: Decimal;

  @ApiProperty({
    required: true,
    type: Number,
  })
  @IsNumber()
  @Field(() => Float)
  capitalPagado!: Decimal;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  codigoBloqueo!: string | null;

  @ApiProperty({
    required: false,
    type: () => ConektaPaymentTransac,
  })
  @ValidateNested()
  @Type(() => ConektaPaymentTransac)
  @IsOptional()
  conektaPaymentTransacs?: ConektaPaymentTransac | null;

  @ApiProperty({
    required: true,
    type: Number,
  })
  @IsNumber()
  @Field(() => Float)
  desctoAplicado!: Decimal;

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  desdeWebhook!: boolean | null;

  @ApiProperty({
    required: true,
    enum: EnumOtherCompaniesPaymentEstatusPago,
  })
  @IsEnum(EnumOtherCompaniesPaymentEstatusPago)
  @Field(() => EnumOtherCompaniesPaymentEstatusPago, {
    nullable: true,
  })
  estatus_pago?: "A" | "C" | "P";

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  fechaPago!: Date;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  fechaProxVenc!: Date | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  fechaVenc!: Date | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  formaPago!: string | null;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  horaPago!: Date;

  @ApiProperty({
    required: true,
    type: Number,
  })
  @IsInt()
  @Field(() => Number)
  id!: number;

  @ApiProperty({
    required: true,
    type: Number,
  })
  @IsNumber()
  @Field(() => Float)
  interesPagado!: Decimal;

  @ApiProperty({
    required: true,
    type: Number,
  })
  @IsInt()
  @Field(() => Number)
  numPago!: number;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  opcionCambio!: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  opcionPago!: string | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  pagosAdelantados!: number | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  receivedUserId!: number | null;

  @ApiProperty({
    required: false,
    type: () => StripePaymentTransac,
  })
  @ValidateNested()
  @Type(() => StripePaymentTransac)
  @IsOptional()
  stripePaymentTransacs?: StripePaymentTransac | null;

  @ApiProperty({
    required: true,
    enum: EnumOtherCompaniesPaymentTipoPago,
  })
  @IsEnum(EnumOtherCompaniesPaymentTipoPago)
  @Field(() => EnumOtherCompaniesPaymentTipoPago, {
    nullable: true,
  })
  tipo_pago?: "P" | "A" | "D" | "C";

  @ApiProperty({
    required: true,
    type: () => Warehouse,
  })
  @ValidateNested()
  @Type(() => Warehouse)
  warehouses?: Warehouse;
}

export { OtherCompaniesPayment as OtherCompaniesPayment };
