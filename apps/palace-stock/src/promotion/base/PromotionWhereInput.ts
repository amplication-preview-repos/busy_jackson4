/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { StringNullableFilter } from "../../util/StringNullableFilter";
import { Type } from "class-transformer";
import { IsOptional, IsEnum } from "class-validator";
import { EnumPromotionHabilitado } from "./EnumPromotionHabilitado";
import { IntFilter } from "../../util/IntFilter";
import { DecimalFilter } from "../../util/DecimalFilter";
import { EnumPromotionTipoDescuento } from "./EnumPromotionTipoDescuento";

@InputType()
class PromotionWhereInput {
  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  descripccionDescuento?: StringNullableFilter;

  @ApiProperty({
    required: false,
    enum: EnumPromotionHabilitado,
  })
  @IsEnum(EnumPromotionHabilitado)
  @IsOptional()
  @Field(() => EnumPromotionHabilitado, {
    nullable: true,
  })
  habilitado?: "H" | "I";

  @ApiProperty({
    required: false,
    type: IntFilter,
  })
  @Type(() => IntFilter)
  @IsOptional()
  @Field(() => IntFilter, {
    nullable: true,
  })
  id?: IntFilter;

  @ApiProperty({
    required: false,
    type: DecimalFilter,
  })
  @Type(() => DecimalFilter)
  @IsOptional()
  @Field(() => DecimalFilter, {
    nullable: true,
  })
  montoDescuento?: DecimalFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  opcionesDescuento?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: DecimalFilter,
  })
  @Type(() => DecimalFilter)
  @IsOptional()
  @Field(() => DecimalFilter, {
    nullable: true,
  })
  porcentajeDescuento?: DecimalFilter;

  @ApiProperty({
    required: false,
    enum: EnumPromotionTipoDescuento,
  })
  @IsEnum(EnumPromotionTipoDescuento)
  @IsOptional()
  @Field(() => EnumPromotionTipoDescuento, {
    nullable: true,
  })
  tipo_descuento?: "P" | "E";
}

export { PromotionWhereInput as PromotionWhereInput };
