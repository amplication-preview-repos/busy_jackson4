/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field, Float } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsString,
  IsOptional,
  ValidateNested,
  IsInt,
  IsEnum,
  IsDate,
  IsNumber,
} from "class-validator";
import { CustomerWhereUniqueInput } from "../../customer/base/CustomerWhereUniqueInput";
import { Type } from "class-transformer";
import { EnumPersonalLoanEstatusPrestamo } from "./EnumPersonalLoanEstatusPrestamo";
import { KardexUpdateManyWithoutPersonalLoansInput } from "./KardexUpdateManyWithoutPersonalLoansInput";
import { Decimal } from "decimal.js";
import { PaymentUpdateManyWithoutPersonalLoansInput } from "./PaymentUpdateManyWithoutPersonalLoansInput";
import { EnumPersonalLoanTipoPlazo } from "./EnumPersonalLoanTipoPlazo";
import { UserModelWhereUniqueInput } from "../../userModel/base/UserModelWhereUniqueInput";
import { EnumPersonalLoanValidacionesSaltadas } from "./EnumPersonalLoanValidacionesSaltadas";
import { WarehouseWhereUniqueInput } from "../../warehouse/base/WarehouseWhereUniqueInput";

@InputType()
class PersonalLoanUpdateInput {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  codigoBloqueo?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  comentarios?: string | null;

  @ApiProperty({
    required: false,
    type: () => CustomerWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => CustomerWhereUniqueInput)
  @IsOptional()
  @Field(() => CustomerWhereUniqueInput, {
    nullable: true,
  })
  customers?: CustomerWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  deletedUserId?: number | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  desctoPagoOportuno?: number;

  @ApiProperty({
    required: false,
    enum: EnumPersonalLoanEstatusPrestamo,
  })
  @IsEnum(EnumPersonalLoanEstatusPrestamo)
  @IsOptional()
  @Field(() => EnumPersonalLoanEstatusPrestamo, {
    nullable: true,
  })
  estatus_prestamo?: "A" | "T" | "C" | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  fechaCancelacion?: Date | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  fechaPrestamo?: Date | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  fechaPrimerPago?: Date;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  fechaRegistro?: Date;

  @ApiProperty({
    required: false,
    type: () => KardexUpdateManyWithoutPersonalLoansInput,
  })
  @ValidateNested()
  @Type(() => KardexUpdateManyWithoutPersonalLoansInput)
  @IsOptional()
  @Field(() => KardexUpdateManyWithoutPersonalLoansInput, {
    nullable: true,
  })
  kardex?: KardexUpdateManyWithoutPersonalLoansInput;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @IsOptional()
  @Field(() => Float, {
    nullable: true,
  })
  montoFinanciado?: Decimal;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @IsOptional()
  @Field(() => Float, {
    nullable: true,
  })
  montoPago?: Decimal;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @IsOptional()
  @Field(() => Float, {
    nullable: true,
  })
  montoPagoInicial?: Decimal | null;

  @ApiProperty({
    required: false,
    type: () => PaymentUpdateManyWithoutPersonalLoansInput,
  })
  @ValidateNested()
  @Type(() => PaymentUpdateManyWithoutPersonalLoansInput)
  @IsOptional()
  @Field(() => PaymentUpdateManyWithoutPersonalLoansInput, {
    nullable: true,
  })
  payments?: PaymentUpdateManyWithoutPersonalLoansInput;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  plazo?: number;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  requestedUserId?: number | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @IsOptional()
  @Field(() => Float, {
    nullable: true,
  })
  tasaInteres?: Decimal;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  tasaInteresAnual?: number;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  telefonoEnvioToken?: string | null;

  @ApiProperty({
    required: false,
    enum: EnumPersonalLoanTipoPlazo,
  })
  @IsEnum(EnumPersonalLoanTipoPlazo)
  @IsOptional()
  @Field(() => EnumPersonalLoanTipoPlazo, {
    nullable: true,
  })
  tipo_plazo?: "S" | "Q";

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  tokenEnviado?: string | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  updatedAt?: Date | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  updatedUserId?: number | null;

  @ApiProperty({
    required: false,
    type: () => UserModelWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => UserModelWhereUniqueInput)
  @IsOptional()
  @Field(() => UserModelWhereUniqueInput, {
    nullable: true,
  })
  users?: UserModelWhereUniqueInput;

  @ApiProperty({
    required: false,
    enum: EnumPersonalLoanValidacionesSaltadas,
  })
  @IsEnum(EnumPersonalLoanValidacionesSaltadas)
  @IsOptional()
  @Field(() => EnumPersonalLoanValidacionesSaltadas, {
    nullable: true,
  })
  validaciones_saltadas?: "S" | "N" | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  vendorLock?: string | null;

  @ApiProperty({
    required: false,
    type: () => WarehouseWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => WarehouseWhereUniqueInput)
  @IsOptional()
  @Field(() => WarehouseWhereUniqueInput, {
    nullable: true,
  })
  warehouses?: WarehouseWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  warningAlert?: string | null;
}

export { PersonalLoanUpdateInput as PersonalLoanUpdateInput };
