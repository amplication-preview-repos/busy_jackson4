/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, BillingSatKey as PrismaBillingSatKey } from "@prisma/client";

export class BillingSatKeyServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.BillingSatKeyCountArgs, "select">
  ): Promise<number> {
    return this.prisma.billingSatKey.count(args);
  }

  async billingSatKeys<T extends Prisma.BillingSatKeyFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.BillingSatKeyFindManyArgs>
  ): Promise<PrismaBillingSatKey[]> {
    return this.prisma.billingSatKey.findMany<Prisma.BillingSatKeyFindManyArgs>(
      args
    );
  }
  async billingSatKey<T extends Prisma.BillingSatKeyFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.BillingSatKeyFindUniqueArgs>
  ): Promise<PrismaBillingSatKey | null> {
    return this.prisma.billingSatKey.findUnique(args);
  }
  async createBillingSatKey<T extends Prisma.BillingSatKeyCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.BillingSatKeyCreateArgs>
  ): Promise<PrismaBillingSatKey> {
    return this.prisma.billingSatKey.create<T>(args);
  }
  async updateBillingSatKey<T extends Prisma.BillingSatKeyUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.BillingSatKeyUpdateArgs>
  ): Promise<PrismaBillingSatKey> {
    return this.prisma.billingSatKey.update<T>(args);
  }
  async deleteBillingSatKey<T extends Prisma.BillingSatKeyDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.BillingSatKeyDeleteArgs>
  ): Promise<PrismaBillingSatKey> {
    return this.prisma.billingSatKey.delete(args);
  }
}
