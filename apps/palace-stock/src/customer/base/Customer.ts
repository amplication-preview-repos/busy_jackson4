/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { ObjectType, Field, Float } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { AngazaAccount } from "../../angazaAccount/base/AngazaAccount";

import {
  ValidateNested,
  IsOptional,
  IsString,
  IsInt,
  IsBoolean,
  IsEnum,
  IsNumber,
  IsDate,
} from "class-validator";

import { Type } from "class-transformer";
import { EnumCustomerCteRequiereFactura } from "./EnumCustomerCteRequiereFactura";
import { Document } from "../../document/base/Document";
import { Decimal } from "decimal.js";
import { EnumCustomerEstatusCliente } from "./EnumCustomerEstatusCliente";
import { FinancedSale } from "../../financedSale/base/FinancedSale";
import { EnumCustomerGeneroCliente } from "./EnumCustomerGeneroCliente";
import { EnumCustomerIneDireccionActual } from "./EnumCustomerIneDireccionActual";
import { LoanedDevice } from "../../loanedDevice/base/LoanedDevice";
import { LockedDevBadCustomer } from "../../lockedDevBadCustomer/base/LockedDevBadCustomer";
import { PersonalLoan } from "../../personalLoan/base/PersonalLoan";
import { ProtectionCertActivation } from "../../protectionCertActivation/base/ProtectionCertActivation";
import { ProtectionCert } from "../../protectionCert/base/ProtectionCert";
import { SupportTicket } from "../../supportTicket/base/SupportTicket";
import { Transaction } from "../../transaction/base/Transaction";
import { UserModel } from "../../userModel/base/UserModel";
import { Warehouse } from "../../warehouse/base/Warehouse";

@ObjectType()
class Customer {
  @ApiProperty({
    required: false,
    type: () => [AngazaAccount],
  })
  @ValidateNested()
  @Type(() => AngazaAccount)
  @IsOptional()
  angazaAccounts?: Array<AngazaAccount>;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  antiguedadTrabajo!: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  apellido1Cliente!: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  apellido2Cliente!: string | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  billingCfdiUseId!: number | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  billingFiscalRegimeId!: number | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  ciudadActualCte!: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  ciudadCte!: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  ciudadRazSoc!: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  clabePaycode!: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  claveIdCliente!: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  coloniaActualCte!: string | null;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  coloniaCte!: string;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  coloniaRazSoc!: string | null;

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  conekta!: boolean | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  correoCte!: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  correoRazSoc!: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  cpActualCte!: string | null;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  cpCte!: string;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  cpRazSoc!: string | null;

  @ApiProperty({
    required: true,
    enum: EnumCustomerCteRequiereFactura,
  })
  @IsEnum(EnumCustomerCteRequiereFactura)
  @Field(() => EnumCustomerCteRequiereFactura, {
    nullable: true,
  })
  cte_requiere_factura?: "S" | "N";

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  curpCliente!: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  direccionActualCte!: string | null;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  direccionCte!: string;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  direccionRazSoc!: string | null;

  @ApiProperty({
    required: false,
    type: () => [Document],
  })
  @ValidateNested()
  @Type(() => Document)
  @IsOptional()
  documents?: Array<Document>;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  domicilioTrabajo!: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  edadCliente!: string | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @IsOptional()
  @Field(() => Float, {
    nullable: true,
  })
  enganchePromoLealtad!: Decimal | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  estadoRepActualCte!: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  estadoRepCte!: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  estadoRepRazSoc!: string | null;

  @ApiProperty({
    required: true,
    enum: EnumCustomerEstatusCliente,
  })
  @IsEnum(EnumCustomerEstatusCliente)
  @Field(() => EnumCustomerEstatusCliente, {
    nullable: true,
  })
  estatus_cliente?: "A" | "I";

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  estatusSeguroVida!: boolean | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  fechaActivacionSeguro!: Date | null;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  fechaAltaCliente!: Date;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  fechaRegistro!: Date | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  fechaUltCambio!: Date | null;

  @ApiProperty({
    required: false,
    type: () => [FinancedSale],
  })
  @ValidateNested()
  @Type(() => FinancedSale)
  @IsOptional()
  financedSales?: Array<FinancedSale>;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  folioSeguroVida!: string | null;

  @ApiProperty({
    required: false,
    enum: EnumCustomerGeneroCliente,
  })
  @IsEnum(EnumCustomerGeneroCliente)
  @IsOptional()
  @Field(() => EnumCustomerGeneroCliente, {
    nullable: true,
  })
  genero_cliente?: "F" | "M" | "O" | null;

  @ApiProperty({
    required: true,
    type: Number,
  })
  @IsInt()
  @Field(() => Number)
  id!: number;

  @ApiProperty({
    required: false,
    enum: EnumCustomerIneDireccionActual,
  })
  @IsEnum(EnumCustomerIneDireccionActual)
  @IsOptional()
  @Field(() => EnumCustomerIneDireccionActual, {
    nullable: true,
  })
  ine_direccion_actual?: "S" | "N" | null;

  @ApiProperty({
    required: false,
    type: () => [LoanedDevice],
  })
  @ValidateNested()
  @Type(() => LoanedDevice)
  @IsOptional()
  loanedDevices?: Array<LoanedDevice>;

  @ApiProperty({
    required: false,
    type: () => [LockedDevBadCustomer],
  })
  @ValidateNested()
  @Type(() => LockedDevBadCustomer)
  @IsOptional()
  lockedDevBadCustomers?: Array<LockedDevBadCustomer>;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  lugarTrabajo!: string | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @IsOptional()
  @Field(() => Float, {
    nullable: true,
  })
  montoDisponibleEnganche!: Decimal | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  nombreCompletoCliente!: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  nombresCliente!: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  nomRef1Cliente!: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  nomRef2Cliente!: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  nubariumScore!: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  numExtCte!: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  numExtRazSoc!: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  numIntCte!: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  numIntRazSoc!: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  numTelCte!: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  numTelFijoCte!: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  numTelRazSoc!: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  paisRazSoc!: string | null;

  @ApiProperty({
    required: false,
    type: () => [PersonalLoan],
  })
  @ValidateNested()
  @Type(() => PersonalLoan)
  @IsOptional()
  personalLoans?: Array<PersonalLoan>;

  @ApiProperty({
    required: false,
    type: () => [ProtectionCertActivation],
  })
  @ValidateNested()
  @Type(() => ProtectionCertActivation)
  @IsOptional()
  protectionCertActivations?: Array<ProtectionCertActivation>;

  @ApiProperty({
    required: false,
    type: () => [ProtectionCert],
  })
  @ValidateNested()
  @Type(() => ProtectionCert)
  @IsOptional()
  protectionCerts?: Array<ProtectionCert>;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  puestoTrabajo!: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  qidAngaza!: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  razonSocialCte!: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  rfcCte!: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  rfcPersonalCte!: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  rutaFirma!: string | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @IsOptional()
  @Field(() => Float, {
    nullable: true,
  })
  salarioMensualTrabajo!: Decimal | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  scoreMaxValue!: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  secondaryTelephoneNumber!: string | null;

  @ApiProperty({
    required: false,
    type: () => [SupportTicket],
  })
  @ValidateNested()
  @Type(() => SupportTicket)
  @IsOptional()
  supportTickets?: Array<SupportTicket>;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  telRef1Cliente!: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  telRef2Cliente!: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  tipoIdCliente!: string | null;

  @ApiProperty({
    required: false,
    type: () => [Transaction],
  })
  @ValidateNested()
  @Type(() => Transaction)
  @IsOptional()
  transactions?: Array<Transaction>;

  @ApiProperty({
    required: false,
    type: () => UserModel,
  })
  @ValidateNested()
  @Type(() => UserModel)
  @IsOptional()
  usersCustomersCreatedUserIdTousers?: UserModel | null;

  @ApiProperty({
    required: false,
    type: () => UserModel,
  })
  @ValidateNested()
  @Type(() => UserModel)
  @IsOptional()
  usersCustomersUpdatedUserIdTousers?: UserModel | null;

  @ApiProperty({
    required: false,
    type: () => Warehouse,
  })
  @ValidateNested()
  @Type(() => Warehouse)
  @IsOptional()
  warehouses?: Warehouse | null;
}

export { Customer as Customer };
