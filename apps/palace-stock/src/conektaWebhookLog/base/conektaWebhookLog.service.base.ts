/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  ConektaWebhookLog as PrismaConektaWebhookLog,
} from "@prisma/client";

export class ConektaWebhookLogServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.ConektaWebhookLogCountArgs, "select">
  ): Promise<number> {
    return this.prisma.conektaWebhookLog.count(args);
  }

  async conektaWebhookLogs<T extends Prisma.ConektaWebhookLogFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.ConektaWebhookLogFindManyArgs>
  ): Promise<PrismaConektaWebhookLog[]> {
    return this.prisma.conektaWebhookLog.findMany<Prisma.ConektaWebhookLogFindManyArgs>(
      args
    );
  }
  async conektaWebhookLog<T extends Prisma.ConektaWebhookLogFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.ConektaWebhookLogFindUniqueArgs>
  ): Promise<PrismaConektaWebhookLog | null> {
    return this.prisma.conektaWebhookLog.findUnique(args);
  }
  async createConektaWebhookLog<T extends Prisma.ConektaWebhookLogCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.ConektaWebhookLogCreateArgs>
  ): Promise<PrismaConektaWebhookLog> {
    return this.prisma.conektaWebhookLog.create<T>(args);
  }
  async updateConektaWebhookLog<T extends Prisma.ConektaWebhookLogUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.ConektaWebhookLogUpdateArgs>
  ): Promise<PrismaConektaWebhookLog> {
    return this.prisma.conektaWebhookLog.update<T>(args);
  }
  async deleteConektaWebhookLog<T extends Prisma.ConektaWebhookLogDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.ConektaWebhookLogDeleteArgs>
  ): Promise<PrismaConektaWebhookLog> {
    return this.prisma.conektaWebhookLog.delete(args);
  }
}
