/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  ProtectionCertStatus as PrismaProtectionCertStatus,
} from "@prisma/client";

export class ProtectionCertStatusServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.ProtectionCertStatusCountArgs, "select">
  ): Promise<number> {
    return this.prisma.protectionCertStatus.count(args);
  }

  async protectionCertStatuses<
    T extends Prisma.ProtectionCertStatusFindManyArgs
  >(
    args: Prisma.SelectSubset<T, Prisma.ProtectionCertStatusFindManyArgs>
  ): Promise<PrismaProtectionCertStatus[]> {
    return this.prisma.protectionCertStatus.findMany<Prisma.ProtectionCertStatusFindManyArgs>(
      args
    );
  }
  async protectionCertStatus<
    T extends Prisma.ProtectionCertStatusFindUniqueArgs
  >(
    args: Prisma.SelectSubset<T, Prisma.ProtectionCertStatusFindUniqueArgs>
  ): Promise<PrismaProtectionCertStatus | null> {
    return this.prisma.protectionCertStatus.findUnique(args);
  }
  async createProtectionCertStatus<
    T extends Prisma.ProtectionCertStatusCreateArgs
  >(
    args: Prisma.SelectSubset<T, Prisma.ProtectionCertStatusCreateArgs>
  ): Promise<PrismaProtectionCertStatus> {
    return this.prisma.protectionCertStatus.create<T>(args);
  }
  async updateProtectionCertStatus<
    T extends Prisma.ProtectionCertStatusUpdateArgs
  >(
    args: Prisma.SelectSubset<T, Prisma.ProtectionCertStatusUpdateArgs>
  ): Promise<PrismaProtectionCertStatus> {
    return this.prisma.protectionCertStatus.update<T>(args);
  }
  async deleteProtectionCertStatus<
    T extends Prisma.ProtectionCertStatusDeleteArgs
  >(
    args: Prisma.SelectSubset<T, Prisma.ProtectionCertStatusDeleteArgs>
  ): Promise<PrismaProtectionCertStatus> {
    return this.prisma.protectionCertStatus.delete(args);
  }
}
