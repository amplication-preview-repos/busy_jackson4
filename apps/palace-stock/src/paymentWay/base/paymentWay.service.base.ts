/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, PaymentWay as PrismaPaymentWay } from "@prisma/client";

export class PaymentWayServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.PaymentWayCountArgs, "select">
  ): Promise<number> {
    return this.prisma.paymentWay.count(args);
  }

  async paymentWays<T extends Prisma.PaymentWayFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.PaymentWayFindManyArgs>
  ): Promise<PrismaPaymentWay[]> {
    return this.prisma.paymentWay.findMany<Prisma.PaymentWayFindManyArgs>(args);
  }
  async paymentWay<T extends Prisma.PaymentWayFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.PaymentWayFindUniqueArgs>
  ): Promise<PrismaPaymentWay | null> {
    return this.prisma.paymentWay.findUnique(args);
  }
  async createPaymentWay<T extends Prisma.PaymentWayCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.PaymentWayCreateArgs>
  ): Promise<PrismaPaymentWay> {
    return this.prisma.paymentWay.create<T>(args);
  }
  async updatePaymentWay<T extends Prisma.PaymentWayUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.PaymentWayUpdateArgs>
  ): Promise<PrismaPaymentWay> {
    return this.prisma.paymentWay.update<T>(args);
  }
  async deletePaymentWay<T extends Prisma.PaymentWayDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.PaymentWayDeleteArgs>
  ): Promise<PrismaPaymentWay> {
    return this.prisma.paymentWay.delete(args);
  }
}
