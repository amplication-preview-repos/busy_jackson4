/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field, Float } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { EnumEstimateAspiraOtroProducto } from "./EnumEstimateAspiraOtroProducto";
import {
  IsEnum,
  IsOptional,
  IsInt,
  IsNumber,
  IsDate,
  ValidateNested,
  IsString,
} from "class-validator";
import { EnumEstimateAutorizaContacto } from "./EnumEstimateAutorizaContacto";
import { Decimal } from "decimal.js";
import { Type } from "class-transformer";
import { ItemWhereUniqueInput } from "../../item/base/ItemWhereUniqueInput";
import { EnumEstimatePlazo } from "./EnumEstimatePlazo";
import { EnumEstimateRechazoFinanc } from "./EnumEstimateRechazoFinanc";
import { WarehouseWhereUniqueInput } from "../../warehouse/base/WarehouseWhereUniqueInput";

@InputType()
class EstimateCreateInput {
  @ApiProperty({
    required: false,
    enum: EnumEstimateAspiraOtroProducto,
  })
  @IsEnum(EnumEstimateAspiraOtroProducto)
  @IsOptional()
  @Field(() => EnumEstimateAspiraOtroProducto, {
    nullable: true,
  })
  aspira_otro_producto?: "N" | "S" | null;

  @ApiProperty({
    required: false,
    enum: EnumEstimateAutorizaContacto,
  })
  @IsEnum(EnumEstimateAutorizaContacto)
  @IsOptional()
  @Field(() => EnumEstimateAutorizaContacto, {
    nullable: true,
  })
  autoriza_contacto?: "N" | "S" | null;

  @ApiProperty({
    required: true,
    type: Number,
  })
  @IsInt()
  @Field(() => Number)
  createdUserId!: number;

  @ApiProperty({
    required: true,
    type: Number,
  })
  @IsInt()
  @Field(() => Number)
  desctoPagoOportuno!: number;

  @ApiProperty({
    required: true,
    type: Number,
  })
  @IsNumber()
  @Field(() => Float)
  enganche!: Decimal;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  fechaCotiz!: Date;

  @ApiProperty({
    required: true,
    type: Number,
  })
  @IsNumber()
  @Field(() => Float)
  interesAnual!: Decimal;

  @ApiProperty({
    required: true,
    type: Number,
  })
  @IsNumber()
  @Field(() => Float)
  interesSemanalMultiplo!: Decimal;

  @ApiProperty({
    required: true,
    type: () => ItemWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => ItemWhereUniqueInput)
  @Field(() => ItemWhereUniqueInput)
  items!: ItemWhereUniqueInput;

  @ApiProperty({
    required: true,
    type: Number,
  })
  @IsNumber()
  @Field(() => Float)
  montoPago!: Decimal;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  motivoRechazo?: string | null;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  nombreCompletoCliente!: string;

  @ApiProperty({
    required: true,
    type: Number,
  })
  @IsInt()
  @Field(() => Number)
  numPagos!: number;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  observacionesCotizacion?: string | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @IsOptional()
  @Field(() => Float, {
    nullable: true,
  })
  pagoSemanalIdeal?: Decimal | null;

  @ApiProperty({
    required: true,
    enum: EnumEstimatePlazo,
  })
  @IsEnum(EnumEstimatePlazo)
  @Field(() => EnumEstimatePlazo)
  plazo!: "S" | "Q";

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @IsOptional()
  @Field(() => Float, {
    nullable: true,
  })
  precioLista?: Decimal | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  productoInteres?: string | null;

  @ApiProperty({
    required: false,
    enum: EnumEstimateRechazoFinanc,
  })
  @IsEnum(EnumEstimateRechazoFinanc)
  @IsOptional()
  @Field(() => EnumEstimateRechazoFinanc, {
    nullable: true,
  })
  rechazo_financ?: "N" | "S" | null;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  telefonoCliente!: string;

  @ApiProperty({
    required: true,
    type: () => WarehouseWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => WarehouseWhereUniqueInput)
  @Field(() => WarehouseWhereUniqueInput)
  warehouses!: WarehouseWhereUniqueInput;
}

export { EstimateCreateInput as EstimateCreateInput };
